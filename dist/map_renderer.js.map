{"version":3,"sources":["../src/map_renderer.js"],"names":["link","scope","elem","attrs","ctrl","mapContainer","find","events","on","render","data","worldMap","WorldMap","hideAllGraphPopups","panel","id","panToMapCenter","resize","mapCenter","isADiferentCity","mapCenterMoved","clearCircles","setPollutants","drawPoints","prepareSeries","drawChart","renderingCompleted"],"mappings":";;;;;;AAGe,WAASA,IAAT,CAAcC,KAAd,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwC;AACrD,QAAMC,eAAeH,KAAKI,IAAL,CAAU,gBAAV,CAArB;;AAEAF,SAAKG,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB;AAAA,aAAMC,QAAN;AAAA,KAAzB;;AAEA,aAASA,MAAT,GAAkB;AAChB,UAAI,CAACL,KAAKM,IAAV,EAAgB;;AAEhB,UAAI,CAACN,KAAKO,QAAV,EAAoB;AAClBP,aAAKO,QAAL,GAAgB,IAAIC,QAAJ,CAAaR,IAAb,EAAmBC,aAAa,CAAb,CAAnB,CAAhB;AACA;;;AAGAQ,2BAAmBT,KAAKU,KAAL,CAAWC,EAA9B;;AAEA;AACAX,aAAKO,QAAL,CAAcK,cAAd;AAED;;AAEDZ,WAAKO,QAAL,CAAcM,MAAd;;AAEA,UAAGb,KAAKU,KAAL,CAAWI,SAAX,KAAyB,SAAzB,IAAsCd,KAAKe,eAAL,EAAzC,EACEf,KAAKO,QAAL,CAAcK,cAAd;AACF,UAAGZ,KAAKgB,cAAR,EAAwB;AACtBhB,aAAKO,QAAL,CAAcK,cAAd;AACAZ,aAAKgB,cAAL,GAAoB,KAApB;AACD;;AAGDhB,WAAKO,QAAL,CAAcU,YAAd;AACA;AACA;AACA;AACAjB,WAAKO,QAAL,CAAcW,aAAd;AACA;AACA;AACAlB,WAAKO,QAAL,CAAcY,UAAd;;AAEA;;;AAGAnB,WAAKO,QAAL,CAAca,aAAd;AACApB,WAAKO,QAAL,CAAcc,SAAd,CAAwB,IAAxB,EAtCgB,CAsCe;;AAE/BrB,WAAKsB,kBAAL;AACD;AACF;;qBA/CuB1B,I;;;;AAHjBY,c;;AACEC,wB,mBAAAA,kB","file":"map_renderer.js","sourcesContent":["import WorldMap from './worldmap';\nimport { hideAllGraphPopups } from './utils/map_utils';\n\nexport default function link(scope, elem, attrs, ctrl) {\n  const mapContainer = elem.find('.map-container');\n\n  ctrl.events.on('render', () => render());\n\n  function render() {\n    if (!ctrl.data) return;\n\n    if (!ctrl.worldMap) {\n      ctrl.worldMap = new WorldMap(ctrl, mapContainer[0]);\n      /**\n      * map display\n      */\n      hideAllGraphPopups(ctrl.panel.id);\n\n      //if (ctrl.mapCenterMoved) \n      ctrl.worldMap.panToMapCenter();\n\n    }\n    \n    ctrl.worldMap.resize();\n\n    if(ctrl.panel.mapCenter === 'cityenv' && ctrl.isADiferentCity())\n      ctrl.worldMap.panToMapCenter();\n    if(ctrl.mapCenterMoved) {\n      ctrl.worldMap.panToMapCenter();\n      ctrl.mapCenterMoved=false;\n    }\n\n\n    ctrl.worldMap.clearCircles();\n    //for each target drawpoints  \n    // ctrl.panel.targets.forEach((target)=>{\n    //   console.log('processing target '+target.datasource)\n    ctrl.worldMap.setPollutants()\n    //   ctrl.worldMap.drawPoints(target);\n    // })\n    ctrl.worldMap.drawPoints();\n\n    /**\n    * graph display\n    */\n    ctrl.worldMap.prepareSeries();\n    ctrl.worldMap.drawChart(true); // call drawChart but redraw the chart just update information related\n\n    ctrl.renderingCompleted();\n  }\n}\n"]}