{"version":3,"sources":["../src/worldmap_ctrl.js"],"names":["MetricsPanelCtrl","TimeSeries","kbn","_","mapRenderer","DataFormatter","panelDefaults","maxDataPoints","mapCenter","mapCenterLatitude","mapCenterLongitude","initialZoom","valueName","circleMinSize","circleMaxSize","thresholds","colors","unitSingle","unitPlural","showLegend","esMetric","decimals","hideEmpty","hideZero","stickyLabels","pollutants","mapCenters","WorldmapCtrl","$scope","$injector","contextSrv","setMapProvider","defaults","panel","dataFormatter","events","on","onInitEditMode","bind","onDataReceived","tileServer","user","lightTheme","setMapSaturationClass","saturationClass","map","remove","addEditorTab","dataList","dashboard","snapshot","locations","snapshotLocationData","data","series","seriesHandler","setValues","render","snapshotData","seriesData","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","mapCenterMoved","setZoom","removeLegend","clearCircles","updateThresholdData","legend","update","console","log","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"worldmap_ctrl.js","sourcesContent":["/* eslint import/no-extraneous-dependencies: 0 */\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\n\nimport _ from 'lodash';\nimport mapRenderer from './map_renderer';\nimport DataFormatter from './data_formatter';\nimport './css/worldmap-panel.css!';\n\nconst panelDefaults = {\n  maxDataPoints: 1,\n  mapCenter: '(0°, 0°)',\n  mapCenterLatitude: 0,\n  mapCenterLongitude: 0,\n  initialZoom: 1,\n  valueName: 'total',\n  circleMinSize: 2,\n  circleMaxSize: 30,\n  thresholds: '0,10',\n  colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n  unitSingle: '',\n  unitPlural: '',\n  showLegend: true,\n  esMetric: 'Count',\n  decimals: 0,\n  hideEmpty: false,\n  hideZero: false,\n  stickyLabels: false,\n  pollutants: {\n    'h': {'name': 'Hydrogen', 'unit': ''},\n    'no2': {'name': 'Nitrogen Dioxide', 'unit': 'µg/m3'},\n    'p': {'name': 'Pressure', 'unit': 'hPa'},\n    'pm10': {'name': 'PM10', 'unit': 'ug/m3'},\n    'pm25': {'name': 'PM25', 'unit': 'ug/m3'},\n    't': {'name': 'Temperature', 'unit': 'ºC'},\n    'aqi': {'name': 'Air Quality Index', 'unit': ''}\n  }\n};\n\nconst mapCenters = {\n  '(0°, 0°)': {mapCenterLatitude: 0.0, mapCenterLongitude: 0.0},\n  'North America': {mapCenterLatitude: 40, mapCenterLongitude: -100},\n  'Europe': {mapCenterLatitude: 46, mapCenterLongitude: 14},\n  'West Asia': {mapCenterLatitude: 26, mapCenterLongitude: 53},\n  'SE Asia': {mapCenterLatitude: 10, mapCenterLongitude: 106}\n};\n\nexport default class WorldmapCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, contextSrv) {\n    super($scope, $injector);\n\n    this.setMapProvider(contextSrv);\n    _.defaults(this.panel, panelDefaults);\n\n    this.dataFormatter = new DataFormatter(this, kbn);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    // this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    // this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n\n    // this.loadLocationDataFromFile();\n  }\n\n  setMapProvider(contextSrv) {\n    this.tileServer = contextSrv.user.lightTheme ? 'CartoDB Positron' : 'CartoDB Dark';\n    this.setMapSaturationClass();\n  }\n\n  setMapSaturationClass() {\n    if (this.tileServer === 'CartoDB Dark') {\n      this.saturationClass = 'map-darken';\n    } else {\n      this.saturationClass = '';\n    }\n  }\n\n  // loadLocationDataFromFile(reload) {\n  //   if (this.map && !reload) return;\n\n  //   if (this.panel.snapshotLocationData) {\n  //     this.locations = this.panel.snapshotLocationData;\n  //     return;\n  //   }\n\n  //   if (this.panel.locationData === 'jsonp endpoint') {\n  //     if (!this.panel.jsonpUrl || !this.panel.jsonpCallback) return;\n\n  //     window.$.ajax({\n  //       type: 'GET',\n  //       url: this.panel.jsonpUrl + '?callback=?',\n  //       contentType: 'application/json',\n  //       jsonpCallback: this.panel.jsonpCallback,\n  //       dataType: 'jsonp',\n  //       success: (res) => {\n  //         this.locations = res;\n  //         this.render();\n  //       }\n  //     });\n  //   } else if (this.panel.locationData === 'json endpoint') {\n  //     if (!this.panel.jsonUrl) return;\n\n  //     window.$.getJSON(this.panel.jsonUrl).then((res) => {\n  //       this.locations = res;\n  //       this.render();\n  //     });\n  //   } else if (this.panel.locationData === 'table') {\n  //     // .. Do nothing\n  //   } else if (this.panel.locationData !== 'geohash') {\n  //     window.$.getJSON('public/plugins/grafana-worldmap-panel/data/' + this.panel.locationData + '.json')\n  //       .then(this.reloadLocations.bind(this));\n  //   }\n  // }\n\n  // reloadLocations(res) {\n  //   this.locations = res;\n  //   this.refresh();\n  // }\n\n  onPanelTeardown() {\n    if (this.map) this.map.remove();\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Worldmap', 'public/plugins/grafana-traffic-env-panel/partials/editor.html', 2);\n  }\n\n  onDataReceived(dataList) {\n    if (!dataList) return;\n\n    if (this.dashboard.snapshot && this.locations) {\n      this.panel.snapshotLocationData = this.locations;\n    }\n\n    const data = [];\n\n    this.series = dataList.map(this.seriesHandler.bind(this));\n\n\n    this.dataFormatter.setValues(data);\n\n    this.data = data;\n\n    this.render();\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.onDataReceived(snapshotData);\n  }\n\n  seriesHandler(seriesData) {\n    const series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  setNewMapCenter() {\n    if (this.panel.mapCenter !== 'custom') {\n      this.panel.mapCenterLatitude = mapCenters[this.panel.mapCenter].mapCenterLatitude;\n      this.panel.mapCenterLongitude = mapCenters[this.panel.mapCenter].mapCenterLongitude;\n    }\n    this.mapCenterMoved = true;\n    this.render();\n  }\n\n  setZoom() {\n    this.map.setZoom(this.panel.initialZoom);\n  }\n\n  toggleLegend() {\n    if (!this.panel.showLegend) {\n      this.map.removeLegend();\n    }\n    this.render();\n  }\n\n  toggleStickyLabels() {\n    this.map.clearCircles();\n    this.render();\n  }\n\n  changeThresholds() {\n    this.updateThresholdData();\n    this.map.legend.update();\n    this.render();\n  }\n\n  setPollutants() {\n    console.log(\"SET POLL\");\n  }\n\n/* eslint class-methods-use-this: 0 */\n  link(scope, elem, attrs, ctrl) {\n    mapRenderer(scope, elem, attrs, ctrl);\n  }\n}\n\nWorldmapCtrl.templateUrl = 'module.html';\n"]}