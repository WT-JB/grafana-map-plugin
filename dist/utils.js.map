{"version":3,"sources":["../src/utils.js"],"names":["showPollutants","providedPollutants","allPollutants","id","aqi","measuresTable","document","getElementById","rows","deleteRow","el","firstChild","removeChild","defaultPollutantOption","createElement","html","innerHTML","appendChild","pollutantsToShow","key","forEach","_value","value","pollutant","row","insertRow","className","innerCell0","name","innerCell1","unit","cell0","insertCell","cell1","newPollutant","toUpperCase","mapDivHeight","getElementsByClassName","offsetHeight","mapDivWidth","offsetWidth","style","display","showHealthConcerns","risk","color","meaning","healthConcernsWrapper","healthConcerns","healthRisk","backgroundColor","calculateAQI","aqiIndex","AQI","range","index"],"mappings":"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","file":"utils.js","sourcesContent":["function showPollutants(providedPollutants, allPollutants, id, aqi) {\n\n  const measuresTable = document.getElementById('measures-table');\n\n  while (measuresTable.rows[0]) measuresTable.deleteRow(0);\n\n  // Remove air paramters from dropdown\n  var el = document.getElementById('airParametersDropdown');\n  while ( el.firstChild ) {\n    el.removeChild( el.firstChild )\n  }\n\n  // ---\n\n  // Add default pollutant option to dropdown\n  const defaultPollutantOption = document.createElement('option');\n  const html = '<option value=\"0\" selected=\"selected\">Air Parameter</option>';\n\n  defaultPollutantOption.innerHTML = html;\n  document.getElementById('airParametersDropdown').appendChild(defaultPollutantOption);\n\n  // -----\n\n\n  const pollutantsToShow = {};\n  for (const key in allPollutants) {\n    \n    allPollutants[key].forEach((_value) => {\n      if (_value.id === id) {\n        if (_value.value) {\n          if (!(pollutantsToShow[key])){\n            pollutantsToShow[key] = 0;\n          }\n          pollutantsToShow[key] = _value.value;\n        }\n      }\n    });\n  }\n\n  pollutantsToShow['aqi'] = aqi;\n\n  for (const pollutant in pollutantsToShow){\n    const row = measuresTable.insertRow(0);\n    row.className = 'measure';\n\n    const innerCell0 = providedPollutants[pollutant].name;\n    const innerCell1 = pollutantsToShow[pollutant] + ' ' + providedPollutants[pollutant].unit;\n\n    const cell0 = row.insertCell(0);\n    const cell1 = row.insertCell(1);\n\n\n    cell0.innerHTML = innerCell0;\n    cell1.innerHTML = innerCell1;\n    cell0.className = 'cell';\n    cell1.className = 'cell';\n\n    // Add Pollutants to Chart Dropdown\n    const newPollutant = document.createElement('option');\n\n    newPollutant.id = 'pollutantOption';\n    newPollutant.value = pollutant.toUpperCase();\n\n    newPollutant.innerHTML = providedPollutants[pollutant].name;\n\n    document.getElementById('airParametersDropdown').appendChild(newPollutant);\n\n    // ----\n  }\n\n  const mapDivHeight = document.getElementsByClassName('mapcontainer')[0].offsetHeight;\n  const mapDivWidth = document.getElementsByClassName('mapcontainer')[0].offsetWidth;\n\n  // Only show the map secundary data (tables) when the map div is not too small\n  if (mapDivHeight >= 405 && mapDivWidth >= 860) {\n    document.getElementById('environmentTable').style.display = 'block';\n    document.getElementById('measuresTable').style.display = 'block';\n  }\n}\n\nfunction showHealthConcerns(providedPollutants, risk, color, meaning) {\n  const healthConcernsWrapper = document.getElementById('healthConcernsWrapper');\n  const healthConcerns = document.getElementById('healthConcerns');\n  const healthRisk = document.getElementById('healthRisk');\n\n  const mapDivHeight = document.getElementsByClassName('mapcontainer')[0].offsetHeight;\n  const mapDivWidth = document.getElementsByClassName('mapcontainer')[0].offsetWidth;\n\n  // Only show the map secundary data (tables) when the map div is not too small\n  if (mapDivHeight >= 405 && mapDivWidth >= 860) {\n    healthConcernsWrapper.style.display = 'block';\n    healthConcerns.style.backgroundColor = color;\n    healthRisk.innerHTML = risk;\n  }\n}\n\n\nfunction calculateAQI(aqi) {\n  let aqiIndex;\n  AQI.range.forEach((value, index) => {\n    if (aqi >= value) {\n      aqiIndex = index;\n    }\n  });\n  return aqiIndex;\n}\n\n\nexport {\n  showPollutants, showHealthConcerns, calculateAQI\n}"]}