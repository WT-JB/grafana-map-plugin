{"version":3,"sources":["../src/utils.js"],"names":["showPollutants","providedPollutants","allPollutants","id","aqi","currentParameterForChart","measuresTable","document","querySelector","rows","deleteRow","el","getElementById","firstChild","removeChild","pollutantsToShow","key","forEach","_value","value","pollutant","row","insertRow","innerCell0","name","innerCell1","unit","cell0","insertCell","cell1","innerHTML","newPollutant","createElement","toUpperCase","selected","appendChild","mapDivHeight","getElementsByClassName","offsetHeight","mapDivWidth","offsetWidth","style","display","showHealthConcerns","risk","color","meaning","healthConcernsWrapper","healthConcerns","healthConcernsColor","healthRisk","backgroundColor","calculateAQI","AQI","aqiIndex","range","index"],"mappings":"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","file":"utils.js","sourcesContent":["function showPollutants(providedPollutants, allPollutants, id, aqi, currentParameterForChart) {\n\n  const measuresTable = document.querySelector('#measures_table > table > tbody');\n\n  while (measuresTable.rows[0]) measuresTable.deleteRow(0);\n\n  // Remove air paramters from dropdown\n  var el = document.getElementById('airParametersDropdown');\n  while ( el.firstChild ) {\n    el.removeChild( el.firstChild )\n  }\n\n  // ---\n\n  // Add default pollutant option to dropdown\n/*  const defaultPollutantOption = document.createElement('option');\n  const html = '<option value=\"0\">Air Parameter</option>';\n\n  defaultPollutantOption.innerHTML = html;\n  document.getElementById('airParametersDropdown').appendChild(defaultPollutantOption);*/\n  // -----\n\n  const pollutantsToShow = {};\n  for (const key in allPollutants) {\n    \n    allPollutants[key].forEach((_value) => {\n      if (_value.id === id) {\n        if (_value.value) {\n          if (!(pollutantsToShow[key])){\n            pollutantsToShow[key] = 0;\n          }\n          pollutantsToShow[key] = _value.value;\n        }\n      }\n    });\n  }\n\n  pollutantsToShow['aqi'] = aqi;\n\n  for (const pollutant in pollutantsToShow){\n    const row = measuresTable.insertRow(0);\n    //row.className = 'measure';\n\n    const innerCell0 = providedPollutants[pollutant].name;\n    const innerCell1 = pollutantsToShow[pollutant] + ' ' + providedPollutants[pollutant].unit;\n\n    const cell0 = row.insertCell(0);\n    const cell1 = row.insertCell(1);\n\n\n    cell0.innerHTML = innerCell0;\n    cell1.innerHTML = innerCell1;\n\n    // Add Pollutants to Chart Dropdown\n    const newPollutant = document.createElement('option');\n\n    newPollutant.id = 'pollutantOption';\n    newPollutant.value = pollutant.toUpperCase();\n\n    if(currentParameterForChart===newPollutant.value)\n      newPollutant.selected = 'selected';\n    \n    newPollutant.innerHTML = providedPollutants[pollutant].name;\n\n    document.getElementById('airParametersDropdown').appendChild(newPollutant);\n    // ----\n  }\n\n  const mapDivHeight = document.getElementsByClassName('map-container')[0].offsetHeight;\n  const mapDivWidth = document.getElementsByClassName('map-container')[0].offsetWidth;\n\n  // Only show the map secundary data (tables) when the map div is not too small\n  if (mapDivHeight >= 405 && mapDivWidth >= 860) {\n    document.getElementById('environment_table').style.display = 'block';\n    document.getElementById('measures_table').style.display = 'block';\n  }\n}\n\nfunction showHealthConcerns(providedPollutants, risk, color, meaning) {\n  const healthConcernsWrapper = document.getElementById('health_concerns_wrapper');\n  const healthConcerns = document.querySelector('#health_concerns_wrapper>div');\n  const healthConcernsColor = document.querySelector('#health_concerns_wrapper>div>span>span.color');\n  const healthRisk = document.getElementById('health_risk');\n\n  const mapDivHeight = document.getElementsByClassName('map-container')[0].offsetHeight;\n  const mapDivWidth = document.getElementsByClassName('map-container')[0].offsetWidth;\n\n  // Only show the map secundary data (tables) when the map div is not too small\n  if (mapDivHeight >= 405 && mapDivWidth >= 860) {\n    healthConcernsWrapper.style.display = 'block';\n    healthConcernsColor.style.backgroundColor = color;\n    healthRisk.innerHTML = risk;\n  }\n}\n\nfunction calculateAQI(AQI, aqi) {\n  let aqiIndex;\n  AQI.range.forEach((value, index) => {\n    if (aqi >= value) {\n      aqiIndex = index;\n    }\n  });\n  return aqiIndex;\n}\n\nexport {\n  showPollutants, showHealthConcerns, calculateAQI\n}"]}