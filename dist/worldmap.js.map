{"version":3,"sources":["../src/worldmap.js"],"names":["showPollutants","e","measuresTable","document","getElementById","rows","deleteRow","circlePollutants","target","options","pollutants","forEach","pollutant","row","insertRow","className","innerCell0","name","toUpperCase","innerCell1","value","cell0","insertCell","cell1","innerHTML","style","display","showHealthConcerns","healthConcernsWrapper","healthConcerns","healthRisk","risk","aqiRisk","color","aqiColor","meaning","aqiMeaning","backgroundColor","calculateAQI","aqi","aqiIndex","AQI","range","index","drawChart","myChart","window","Highcharts","chart","type","title","text","xAxis","categories","yAxis","series","data","_","L","carsCount","mapControl","mapZoom","globalCircles","globalMarkers","globalPolylines","tileServers","url","attribution","subdomains","carMarker","icon","iconUrl","iconSize","WorldMap","ctrl","mapContainer","createMap","circles","mapCenter","latLng","parseFloat","panel","mapCenterLatitude","mapCenterLongitude","map","worldCopyJump","center","zoomControl","fitWorld","zoomIn","parseInt","initialZoom","panTo","control","zoom","position","addTo","on","getZoom","selectedTileServer","tileServer","tileLayer","maxZoom","reuseTiles","detectRetina","filter","o","hideEmpty","isNil","hideZero","circlesLayer","clearLayers","removeCircles","markersLayer","removeMarkers","polylinesLayer","removePolylines","filterEmptyAndZeroValues","clearCircles","clearMarkers","clearPolylines","createPoints","dataPoint","newCircle","createCircle","push","addCircles","createMarker","console","log","way","calculatePointPolyline","locationLatitude","locationLongitude","polyline","point","colorIndex","_value","polygon","weight","smoothFactor","addPolylines","createPopupPolyline","latitude","longitude","nominatim","urlStart","urlFinish","$","ajax","dataType","cache","success","createPolyline","geojson","coordinates","error","alert","risks","circle","fillColor","fillOpacity","createPopupCircle","marker","label","bindPopup","stickyLabels","onMouseOver","evt","openPopup","onMouseOut","closePopup","trim","invalidateSize","mapCenterMoved","legend","removeFrom","layerGroup","markers","polylines","removeLayer","zoomFactor","setZoom"],"mappings":"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","file":"worldmap.js","sourcesContent":["import _ from 'lodash';\n\nimport Highcharts from './libs/highcharts';\n\n/* eslint-disable id-length, no-unused-vars */\nimport L from './libs/leaflet';\n/* eslint-disable id-length, no-unused-vars */\n\nconst AQI = {\n  'range': [0, 50, 100, 150, 200, 300, 500],\n  'meaning': ['Good', 'Moderate', 'Unhealthy for Sensitive Groups', 'Unhealthy', 'Very Unhealthy', 'Hazardous'],\n  'color': ['#009966', '#ffde33', '#ff9933', '#cc0033', '#660099', '#7e0023'],\n  'risks': ['Air quality is considered satisfactory, and air pollution poses little or no risk.', 'Air quality is acceptable; however, for some pollutants there may be a moderate health concern for a very small number of people who are unusually sensitive to air pollution.', 'Members of sensitive groups may experience health effects. The general public is not likely to be affected.', 'Everyone may begin to experience health effects; members of sensitive groups may experience more serious health effects.', 'Health alert: everyone may experience more serious health effects.', 'Health warnings of emergency conditions. The entire population is more likely to be affected.']\n};\n\nconst carsCount = {\n  'range': [15, 30, 45, 60, 75, 90, 105],\n  'color': ['#009966', '#ffde33', '#ff9933', '#cc0033', '#660099', '#7e0023']\n};\n\nlet mapControl;\nlet mapZoom;\n\nlet globalCircles = [];\nlet globalMarkers = [];\nlet globalPolylines = [];\n\nconst tileServers = {\n  'CartoDB Positron': { url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png', attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>', subdomains: 'abcd'},\n  'CartoDB Dark': {url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png', attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>', subdomains: 'abcd'}\n};\n\nconst carMarker = window.L.icon({\n  iconUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/Map_marker.svg/2000px-Map_marker.svg.png',\n\n  iconSize: [25, 40], // size of the icon\n  // iconAnchor: [15, 82], // point of the icon which will correspond to marker's location\n  // popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor\n});\n\nexport default class WorldMap {\n  constructor(ctrl, mapContainer) {\n    this.ctrl = ctrl;\n    this.mapContainer = mapContainer;\n    this.createMap();\n    this.circles = [];\n  }\n\n  createMap() {\n    const mapCenter = window.L.latLng(parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude));\n    mapControl = this.map = window.L.map(this.mapContainer, {worldCopyJump: true, center: mapCenter, zoomControl: false})\n      .fitWorld()\n      .zoomIn(parseInt(this.ctrl.panel.initialZoom, 5));\n    this.map.panTo(mapCenter);\n    window.L.control.zoom({position: 'topright'}).addTo(this.map);\n\n    this.map.on('zoomstart', (e) => {\n      mapZoom = mapControl.getZoom();\n    });\n\n    drawChart();\n\n    // this.map.on('zoomend', (e) => {\n    //   globalCircles.forEach((circle) => {\n    //     console.log(mapZoom, e.target._zoom);\n    //     if (e.target._zoom !== 0 && e.target._zoom >= mapZoom) {\n    //       circle.setRadius(circle.getRadius() + Math.round(mapZoom));\n    //     }\n    //     if (e.target._zoom !== 0 && e.target._zoom <= mapZoom) {\n    //       circle.setRadius(circle.getRadius() - Math.round(mapZoom));\n    //     }\n    //     console.log(circle.getRadius());\n    //   });\n    // });\n\n    this.map.on('click', (e) => {\n      document.getElementById('measuresTable').style.display = 'none';\n      document.getElementById('healthConcernsWrapper').style.display = 'none';\n    });\n\n    const selectedTileServer = tileServers[this.ctrl.tileServer];\n    window.L.tileLayer(selectedTileServer.url, {\n      maxZoom: 18,\n      subdomains: selectedTileServer.subdomains,\n      reuseTiles: true,\n      detectRetina: true,\n      attribution: selectedTileServer.attribution\n    }).addTo(this.map, true);\n  }\n\n  filterEmptyAndZeroValues(data) {\n    return _.filter(data, (o) => { return !(this.ctrl.panel.hideEmpty && _.isNil(o.value)) && !(this.ctrl.panel.hideZero && o.value === 0); });\n  }\n\n  clearCircles() {\n    if (this.circlesLayer) {\n      this.circlesLayer.clearLayers();\n      this.removeCircles(this.circlesLayer);\n      globalCircles = [];\n    }\n  }\n  clearMarkers() {\n    if (this.markersLayer) {\n      this.markersLayer.clearLayers();\n      this.removeMarkers(this.markersLayer);\n      globalMarkers = [];\n    }\n  }\n\n  clearPolylines() {\n    if (this.polylinesLayer) {\n      this.polylinesLayer.clearLayers();\n      this.removePolylines(this.polylinesLayer);\n      globalPolylines = [];\n    }\n  }\n\n  drawPoints() {\n    const data = this.filterEmptyAndZeroValues(this.ctrl.data);\n    this.clearCircles();\n    this.clearMarkers();\n    this.clearPolylines();\n\n    this.createPoints(data);\n  }\n\n  createPoints(data) {\n    data.forEach((dataPoint) => {\n      if (dataPoint.type === 'environment') {\n        const newCircle = this.createCircle(dataPoint);\n        globalCircles.push(newCircle);\n        this.circlesLayer = this.addCircles(globalCircles);\n      } else if (dataPoint.type === 'traffic') {\n        this.createMarker(dataPoint);\n        // const newMarker = this.createMarker(dataPoint);\n        // globalMarkers.push(newMarker);\n        // this.markersLayer = this.addMarkers(globalMarkers);\n      } else {\n        console.log('Map point type ' + dataPoint.type + ' invalid. Must be environment or traffic');\n      }\n    });\n  }\n\n  createMarker(dataPoint) {\n    // const marker = window.L.marker([dataPoint.locationLatitude, dataPoint.locationLongitude]);\n    const way = this.calculatePointPolyline(dataPoint.locationLatitude, dataPoint.locationLongitude, dataPoint.value);\n    // this.createPopupMarker(marker, dataPoint.value);\n    // return marker;\n  }\n\n  createPolyline(way, value) {\n    const polyline = [];\n    way.forEach((point) => {\n      polyline.push([point[1], point[0]]);\n    });\n\n    let colorIndex;\n    carsCount.range.forEach((_value, index) => {\n      if (value > _value && value <= carsCount.range[index + 1]) {\n        colorIndex = index;\n      }\n    });\n\n    const color = carsCount.color[colorIndex];\n\n    const polygon = window.L.polyline(polyline, {\n      color: color,\n      weight: 5,\n      smoothFactor: 1\n    });\n    globalPolylines.push(polygon);\n    this.polylinesLayer = this.addPolylines(globalPolylines);\n\n    this.createPopupPolyline(polygon, value);\n  }\n\n  calculatePointPolyline(latitude, longitude, value) {\n    const way = this.nominatim(latitude, longitude, value);\n    return way;\n  }\n\n  nominatim(latitude, longitude, value) {\n    const urlStart = 'http://nominatim.openstreetmap.org/reverse?format=json&';\n    const urlFinish = '&zoom=16&addressdetails=1&polygon_geojson=1';\n\n    window.$.ajax({\n      url: urlStart + 'lat=' + latitude + '&lon=' + longitude + urlFinish,\n      type: 'GET',\n      dataType: 'json',\n      cache: false,\n      success: (data) => {\n        this.createPolyline(data.geojson.coordinates, value);\n      },\n      error: (error) => {\n        alert('Nominatim ERROR');\n      }\n    });\n  }\n\n  createCircle(dataPoint) {\n    const aqi = calculateAQI(dataPoint.value);\n    const aqiColor = AQI.color[aqi];\n    const aqiMeaning = AQI.meaning[aqi];\n    const aqiRisk = AQI.risks[aqi];\n    const pollutants = dataPoint.pollutants;\n\n    const circle = window.L.circle([dataPoint.locationLatitude, dataPoint.locationLongitude], 200, {\n      color: aqiColor,\n      fillColor: aqiColor,\n      fillOpacity: 0.5,\n      aqiColor: aqiColor,\n      aqiMeaning: aqiMeaning,\n      aqiRisk: aqiRisk,\n      pollutants: pollutants\n    }).on('click', showPollutants).on('mouseover', showPollutants);\n\n    this.createPopupCircle(circle, dataPoint.value, aqiMeaning);\n    return circle;\n  }\n\n  createPopupMarker(marker, value) {\n    const label = ('Cars: ' + value);\n    marker.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    marker.on('mouseover', function onMouseOver(evt) {\n      // const layer = evt.target;\n      // layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      marker.on('mouseout', function onMouseOut() {\n        marker.closePopup();\n      });\n    }\n  }\n\n  createPopupCircle(circle, aqi, aqiMeaning) {\n    const label = ('AQI: ' + aqi + ' (' + aqiMeaning + ')').trim();\n    circle.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    circle.on('mouseover', function onMouseOver(evt) {\n      // const layer = evt.target;\n      // layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      circle.on('mouseout', function onMouseOut() {\n        circle.closePopup();\n      });\n    }\n  }\n\n  createPopupPolyline(polyline, value) {\n    const label = ('Number of cars: ' + value).trim();\n    polyline.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    polyline.on('mouseover', function onMouseOver(evt) {\n      // const layer = evt.target;\n      // layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      polyline.on('mouseout', function onMouseOut() {\n        polyline.closePopup();\n      });\n    }\n  }\n\n  resize() {\n    this.map.invalidateSize();\n  }\n\n  panToMapCenter() {\n    this.map.panTo([parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude)]);\n    this.ctrl.mapCenterMoved = false;\n  }\n\n  removeLegend() {\n    this.legend.removeFrom(this.map);\n    this.legend = null;\n  }\n\n  addCircles(circles) {\n    return window.L.layerGroup(circles).addTo(this.map);\n  }\n  addMarkers(markers) {\n    return window.L.layerGroup(markers).addTo(this.map);\n  }\n\n  addPolylines(polylines) {\n    console.log(polylines);\n    return window.L.layerGroup(polylines).addTo(this.map);\n  }\n\n  removeCircles() {\n    this.map.removeLayer(this.circlesLayer);\n  }\n\n  removeMarkers() {\n    this.map.removeLayer(this.markersLayer);\n  }\n\n  removePolylines() {\n    this.map.removeLayer(this.polylinesLayer);\n  }\n\n  setZoom(zoomFactor) {\n    this.map.setZoom(parseInt(zoomFactor, 10));\n  }\n}\n\nfunction showPollutants(e) {\n  const measuresTable = document.getElementById('measures-table');\n\n  while (measuresTable.rows[0]) measuresTable.deleteRow(0);\n\n  const circlePollutants = e.target.options.pollutants;\n\n  circlePollutants.forEach((pollutant) => {\n    const row = measuresTable.insertRow(0);\n    row.className = 'measure';\n\n    const innerCell0 = pollutant.name.toUpperCase();\n    const innerCell1 = pollutant.value;\n\n    const cell0 = row.insertCell(0);\n    const cell1 = row.insertCell(1);\n\n\n    cell0.innerHTML = innerCell0;\n    cell1.innerHTML = innerCell1;\n    cell0.className = 'cell';\n    cell1.className = 'cell';\n  });\n\n  document.getElementById('measuresTable').style.display = 'inherit';\n\n  showHealthConcerns(e);\n}\n\nfunction showHealthConcerns(e) {\n  const healthConcernsWrapper = document.getElementById('healthConcernsWrapper');\n  const healthConcerns = document.getElementById('healthConcerns');\n  const healthRisk = document.getElementById('healthRisk');\n\n  healthConcernsWrapper.style.display = 'inherit';\n\n  const risk = e.target.options.aqiRisk;\n  const color = e.target.options.aqiColor;\n  const meaning = e.target.options.aqiMeaning;\n\n  healthConcerns.style.backgroundColor = color;\n  healthRisk.innerHTML = risk;\n}\n\nfunction calculateAQI(aqi) {\n  let aqiIndex;\n  AQI.range.forEach((value, index) => {\n    if (aqi > value && aqi <= AQI.range[index + 1]) {\n      aqiIndex = index;\n    }\n  });\n  return aqiIndex;\n}\n\nfunction drawChart() {\n  const myChart = window.Highcharts.chart('graphContainer', {\n    chart: {\n      type: 'bar'\n    },\n    title: {\n      text: 'Fruit Consumption'\n    },\n    xAxis: {\n      categories: ['Apples', 'Bananas', 'Oranges']\n    },\n    yAxis: {\n      title: {\n        text: 'Fruit eaten'\n      }\n    },\n    series: [{\n      name: 'Jane',\n      data: [1, 0, 4]\n    }, {\n      name: 'John',\n      data: [5, 7, 3]\n    }]\n  });\n}\n"]}