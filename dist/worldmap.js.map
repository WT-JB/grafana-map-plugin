{"version":3,"sources":["../src/worldmap.js"],"names":["showPollutants","allPollutants","id","aqi","measuresTable","document","getElementById","rows","deleteRow","el","firstChild","removeChild","defaultPollutantOption","createElement","html","innerHTML","appendChild","pollutantsToShow","key","forEach","_value","value","pollutant","row","insertRow","className","innerCell0","Pollutants","name","innerCell1","unit","cell0","insertCell","cell1","newPollutant","toUpperCase","style","display","showHealthConcerns","risk","color","meaning","healthConcernsWrapper","healthConcerns","healthRisk","backgroundColor","calculateAQI","aqiIndex","AQI","range","index","drawChart","e","currentParameter","currentParameterForChart","toLowerCase","chart","target","options","type","values","timeSeries","title","parameterUnit","data","lastValueMeasure","length","pollutants","risks","parameterChoice","sensor","time","Date","day","getDay","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","seconds","getSeconds","push","UTC","window","Highcharts","zoomType","text","subtitle","ontouchstart","undefined","xAxis","yAxis","legend","enabled","plotOptions","area","marker","radius","lineWidth","states","hover","threshold","series","_","L","carsCount","mapControl","mapZoom","globalCircles","globalMarkers","globalPolylines","currentTargetForChart","tileServers","url","attribution","subdomains","carMarker","icon","iconUrl","iconSize","WorldMap","ctrl","mapContainer","createMap","circles","mapCenter","latLng","parseFloat","panel","mapCenterLatitude","mapCenterLongitude","map","worldCopyJump","center","zoomControl","fitWorld","zoomIn","parseInt","initialZoom","panTo","control","zoom","position","addTo","on","getZoom","selectedTileServer","tileServer","tileLayer","maxZoom","reuseTiles","detectRetina","airParametersDropdown","addEventListener","filter","o","hideEmpty","isNil","hideZero","circlesLayer","clearLayers","removeCircles","markersLayer","removeMarkers","polylinesLayer","removePolylines","finalData","auxData","locationLatitude","locationLongitude","filterEmptyAndZeroValues","clearCircles","clearMarkers","clearPolylines","treatedData","dataTreatment","createTimeSeries","createPoints","valueValues","pollutantsValues","Object","keys","point","pollutantsTemp","newCircle","createCircle","addCircles","createMarker","console","log","dataPoint","way","calculatePointPolyline","polyline","colorIndex","polygon","weight","smoothFactor","setTarget","removePollDropdown","addPolylines","createPopupPolyline","latitude","longitude","nominatim","urlStart","urlFinish","$","ajax","dataType","cache","success","createPolyline","geojson","coordinates","error","alert","aqiColor","aqiMeaning","aqiRisk","circle","fillColor","fillOpacity","addPollDropdown","createPopupCircle","label","bindPopup","stickyLabels","onMouseOver","evt","openPopup","onMouseOut","closePopup","trim","invalidateSize","mapCenterMoved","removeFrom","layerGroup","markers","polylines","removeLayer","zoomFactor","setZoom"],"mappings":"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","file":"worldmap.js","sourcesContent":["import _ from 'lodash';\n\nimport Highcharts from './libs/highcharts';\n\n/* eslint-disable id-length, no-unused-vars */\nimport L from './libs/leaflet';\n/* eslint-disable id-length, no-unused-vars */\n\nconst AQI = {\n  'range': [0, 50, 100, 150, 200, 300, 500],\n  'meaning': ['Good', 'Moderate', 'Unhealthy for Sensitive Groups', 'Unhealthy', 'Very Unhealthy', 'Hazardous'],\n  'color': ['#009966', '#ffde33', '#ff9933', '#cc0033', '#660099', '#7e0023'],\n  'risks': ['Air quality is considered satisfactory, and air pollution poses little or no risk.', 'Air quality is acceptable; however, for some pollutants there may be a moderate health concern for a very small number of people who are unusually sensitive to air pollution.', 'Members of sensitive groups may experience health effects. The general public is not likely to be affected.', 'Everyone may begin to experience health effects; members of sensitive groups may experience more serious health effects.', 'Health alert: everyone may experience more serious health effects.', 'Health warnings of emergency conditions. The entire population is more likely to be affected.']\n};\n\nconst carsCount = {\n  'range': [15, 30, 45, 60, 75, 90, 105],\n  'color': ['#009966', '#ffde33', '#ff9933', '#cc0033', '#660099', '#7e0023']\n};\n\nconst Pollutants = {\n  'h': {'name': 'Hydrogen', 'unit': ''}, \n  'no2': {'name': 'Nitrogen Dioxide', 'unit': 'µg/m3'}, \n  'p': {'name': 'Pressure', 'unit': 'hPa'}, \n  'pm10': {'name': 'PM10', 'unit': 'ug/m3'}, \n  'pm25': {'name': 'PM25', 'unit': 'ug/m3'},  \n  't': {'name': 'Temperature', 'unit': 'ºC'}, \n  'aqi': {'name': 'Air Quality Index', 'unit': ''}\n};\n\nlet timeSeries = {};\n\nlet mapControl;\nlet mapZoom;\n\nlet globalCircles = [];\nlet globalMarkers = [];\nlet globalPolylines = [];\n\nlet currentTargetForChart = null;\nlet currentParameterForChart = 'aqi';\n\nconst tileServers = {\n  'CartoDB Positron': { url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png', attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>', subdomains: 'abcd'},\n  'CartoDB Dark': {url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png', attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>', subdomains: 'abcd'}\n};\n\nconst carMarker = window.L.icon({\n  iconUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/Map_marker.svg/2000px-Map_marker.svg.png',\n\n  iconSize: [25, 40], // size of the icon\n  // iconAnchor: [15, 82], // point of the icon which will correspond to marker's location\n  // popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor\n});\n\nexport default class WorldMap {\n  constructor(ctrl, mapContainer) {\n    this.ctrl = ctrl;\n    this.mapContainer = mapContainer;\n    this.createMap();\n    this.circles = [];\n  }\n  \n\n  createMap() {\n    const mapCenter = window.L.latLng(parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude));\n    mapControl = this.map = window.L.map(this.mapContainer, {worldCopyJump: true, center: mapCenter, zoomControl: false})\n      .fitWorld()\n      .zoomIn(parseInt(this.ctrl.panel.initialZoom, 5));\n    this.map.panTo(mapCenter);\n    window.L.control.zoom({position: 'topright'}).addTo(this.map);\n\n    this.map.on('zoomstart', (e) => {\n      mapZoom = mapControl.getZoom();\n    });\n\n    this.map.on('click', (e) => {\n      document.getElementById('measuresTable').style.display = 'none';\n      document.getElementById('healthConcernsWrapper').style.display = 'none';\n      document.getElementById('dataChart').style.display = 'none';\n    });\n\n    const selectedTileServer = tileServers[this.ctrl.tileServer];\n    window.L.tileLayer(selectedTileServer.url, {\n      maxZoom: 18,\n      subdomains: selectedTileServer.subdomains,\n      reuseTiles: true,\n      detectRetina: true,\n      attribution: selectedTileServer.attribution\n    }).addTo(this.map, true);\n\n    const airParametersDropdown = document.getElementById('airParametersDropdown');\n\n    airParametersDropdown.addEventListener(\"change\", function() {\n      currentParameterForChart = this.value;\n      drawChart(currentTargetForChart);\n    });\n  }\n\n  filterEmptyAndZeroValues(data) {\n    return _.filter(data, (o) => { return !(this.ctrl.panel.hideEmpty && _.isNil(o.value)) && !(this.ctrl.panel.hideZero && o.value === 0); });\n  }\n\n  clearCircles() {\n    if (this.circlesLayer) {\n      this.circlesLayer.clearLayers();\n      this.removeCircles(this.circlesLayer);\n      globalCircles = [];\n    }\n  }\n  clearMarkers() {\n    if (this.markersLayer) {\n      this.markersLayer.clearLayers();\n      this.removeMarkers(this.markersLayer);\n      globalMarkers = [];\n    }\n  }\n\n  clearPolylines() {\n    if (this.polylinesLayer) {\n      this.polylinesLayer.clearLayers();\n      this.removePolylines(this.polylinesLayer);\n      globalPolylines = [];\n    }\n  }\n\n  dataTreatment(data) {\n    const finalData = {};\n    let auxData = {};\n\n    data.forEach((value) => {\n      if (!(finalData[value.id])) {\n        finalData[value.id] = [];\n      }\n      if (value.type === 'environment'){\n          finalData[value.id].push({'id': value.id, 'locationLatitude': value.locationLatitude, 'locationLongitude': value.locationLongitude, 'time': value.time, 'type': value.type, 'value': value.value,'pollutants': value.pollutants});\n      }\n      else {\n          finalData[value.id].push({'id': value.id, 'locationLatitude': value.locationLatitude, 'locationLongitude': value.locationLongitude, 'time': value.time, 'type': value.type, 'value': value.value});\n      }\n    });\n\n    return finalData;\n  }\n\n  drawPoints() {\n    const data = this.filterEmptyAndZeroValues(this.ctrl.data);\n    this.clearCircles();\n    this.clearMarkers();\n    this.clearPolylines();\n\n    timeSeries = {};\n\n    const treatedData = this.dataTreatment(data);\n\n    this.createTimeSeries(treatedData);\n    this.createPoints(treatedData);\n\n    // Id sensor selected and new data arrives the chart will be updated\n    if (currentTargetForChart !== null){\n      drawChart(currentTargetForChart);\n    }\n  }\n\n  createTimeSeries(data) {\n    timeSeries = {};\n    const valueValues = {};\n    const values = [];\n    const pollutantsValues = [];\n\n    Object.keys(data).forEach(key => {\n      data[key].forEach((point) => {\n        const id = point.id;\n        const time = point.time;\n        let pollutants = '';\n\n        if(point.type === 'environment'){\n          pollutants = point.pollutants;\n        }\n        const value = point.value;\n        \n        if(point.type === 'environment'){\n          const pollutantsTemp = {};\n\n          pollutants.forEach((pollutant) => {\n            if(!(pollutantsValues[pollutant.name])){\n              pollutantsValues[pollutant.name] = [];\n            }\n            pollutantsValues[pollutant.name].push({'time': time, 'value': pollutant.value, 'id': id});\n          });\n        }\n\n        if (!(valueValues[point.id])){\n          valueValues[point.id] = [];\n        }\n        valueValues[point.id].push({'time': time, 'value': value, 'id': id});\n      });\n    });\n    timeSeries = {'values': valueValues, 'pollutants': pollutantsValues};\n  }\n\n  createPoints(data) {\n    Object.keys(data).forEach(key => {\n      const value = data[key][data[key].length - 1 ]; // Use the last data for each sensor to create on map -> avoid repeated markers on map and use just the last measurement (the one needed to show on marker)\n      if (value.type === 'environment') {\n        const newCircle = this.createCircle(value);\n        globalCircles.push(newCircle);\n        this.circlesLayer = this.addCircles(globalCircles);\n      } else if (value.type === 'traffic') {\n        this.createMarker(value);\n        // const newMarker = this.createMarker(dataPoint);\n        // globalMarkers.push(newMarker);\n        // this.markersLayer = this.addMarkers(globalMarkers);\n      } else {\n        console.log('Map point type ' + value.type + ' invalid. Must be environment or traffic');\n      }\n    });\n  }\n\n  createMarker(dataPoint) {\n    // const marker = window.L.marker([dataPoint.locationLatitude, dataPoint.locationLongitude]);\n    const way = this.calculatePointPolyline(dataPoint.locationLatitude, dataPoint.locationLongitude, dataPoint.value, dataPoint.id, dataPoint.type);\n    // this.createPopupMarker(marker, dataPoint.value);\n    // return marker;\n  }\n\n  createPolyline(way, value, id, type) {\n    const polyline = [];\n    way.forEach((point) => {\n      polyline.push([point[1], point[0]]);\n    });\n\n    let colorIndex;\n    carsCount.range.forEach((_value, index) => {\n      if (value > _value && value <= carsCount.range[index + 1]) {\n        colorIndex = index;\n      }\n    });\n\n    const color = carsCount.color[colorIndex];\n\n    const polygon = window.L.polyline(polyline, {\n      color: color,\n      weight: 5,\n      smoothFactor: 5,\n      id: id,\n      type: type\n    }).on('click', drawChart).on('click', this.setTarget).on('click', this.removePollDropdown);;\n\n    globalPolylines.push(polygon);\n    this.polylinesLayer = this.addPolylines(globalPolylines);\n\n    this.createPopupPolyline(polygon, value);\n  }\n\n  calculatePointPolyline(latitude, longitude, value, id, type) {\n    const way = this.nominatim(latitude, longitude, value, id, type);\n    return way;\n  }\n\n  nominatim(latitude, longitude, value, id, type) {\n    const urlStart = 'http://nominatim.openstreetmap.org/reverse?format=json&';\n    const urlFinish = '&zoom=16&addressdetails=1&polygon_geojson=1';\n\n    window.$.ajax({\n      url: urlStart + 'lat=' + latitude + '&lon=' + longitude + urlFinish,\n      type: 'GET',\n      dataType: 'json',\n      cache: false,\n      success: (data) => {\n        this.createPolyline(data.geojson.coordinates, value, id, type);\n      },\n      error: (error) => {\n        alert('Nominatim ERROR');\n      }\n    });\n  }\n\n  createCircle(dataPoint) {\n    console.log(dataPoint);\n    const aqi = calculateAQI(dataPoint.value);\n    const aqiColor = AQI.color[aqi];\n    const aqiMeaning = AQI.meaning[aqi];\n    const aqiRisk = AQI.risks[aqi];\n    const pollutants = dataPoint.pollutants;\n    const id = dataPoint.id;\n    const type = dataPoint.type;\n\n    pollutants.push({'name': 'aqi', 'value': dataPoint.value});\n\n    const circle = window.L.circle([dataPoint.locationLatitude, dataPoint.locationLongitude], 200, {\n      color: aqiColor,\n      fillColor: aqiColor,\n      fillOpacity: 0.5,\n      aqiColor: aqiColor,\n      aqiMeaning: aqiMeaning,\n      aqiRisk: aqiRisk,\n      pollutants: pollutants,\n      id: id,\n      type: type,\n      latitude: dataPoint.locationLatitude,\n      longitude: dataPoint.locationLongitude,\n      aqi: dataPoint.value\n    }).on('click', drawChart).on('click', this.setTarget).on('click', this.addPollDropdown);\n\n    this.createPopupCircle(circle, dataPoint.value, aqiMeaning);\n    return circle;\n  \n}\n  addPollDropdown() {\n    document.getElementById('dataDetails').style.display = 'block'\n  }\n\n  removePollDropdown() {\n    document.getElementById('dataDetails').style.display = 'none'\n  }\n\n  createPopupMarker(marker, value) {\n    const label = ('Cars: ' + value);\n    marker.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    marker.on('mouseover', function onMouseOver(evt) {\n      // const layer = evt.target;\n      // layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      marker.on('mouseout', function onMouseOut() {\n        marker.closePopup();\n      });\n    }\n  }\n\n  createPopupCircle(circle, aqi, aqiMeaning) {\n    const label = ('AQI: ' + aqi + ' (' + aqiMeaning + ')').trim();\n    circle.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    circle.on('mouseover', function onMouseOver(evt) {\n      // const layer = evt.target;\n      // layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      circle.on('mouseout', function onMouseOut() {\n        circle.closePopup();\n      });\n    }\n  }\n\n  createPopupPolyline(polyline, value) {\n    const label = ('Number of cars: ' + value).trim();\n    polyline.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    polyline.on('mouseover', function onMouseOver(evt) {\n      // const layer = evt.target;\n      // layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      polyline.on('mouseout', function onMouseOut() {\n        polyline.closePopup();\n      });\n    }\n  }\n\n  setTarget(e) {\n    currentTargetForChart = e;\n  }\n\n  resize() {\n    this.map.invalidateSize();\n  }\n\n  panToMapCenter() {\n    this.map.panTo([parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude)]);\n    this.ctrl.mapCenterMoved = false;\n  }\n\n  removeLegend() {\n    this.legend.removeFrom(this.map);\n    this.legend = null;\n  }\n\n  addCircles(circles) {\n    return window.L.layerGroup(circles).addTo(this.map);\n  }\n  addMarkers(markers) {\n    return window.L.layerGroup(markers).addTo(this.map);\n  }\n\n  addPolylines(polylines) {\n    return window.L.layerGroup(polylines).addTo(this.map);\n  }\n\n  removeCircles() {\n    this.map.removeLayer(this.circlesLayer);\n  }\n\n  removeMarkers() {\n    this.map.removeLayer(this.markersLayer);\n  }\n\n  removePolylines() {\n    this.map.removeLayer(this.polylinesLayer);\n  }\n\n  setZoom(zoomFactor) {\n    this.map.setZoom(parseInt(zoomFactor, 10));\n  }\n}\n\nfunction showPollutants(allPollutants, id, aqi) {\n\n  const measuresTable = document.getElementById('measures-table');\n\n  while (measuresTable.rows[0]) measuresTable.deleteRow(0);\n\n  // Remove air paramters from dropdown\n  var el = document.getElementById('airParametersDropdown');\n  while ( el.firstChild ) {\n    el.removeChild( el.firstChild )\n  }\n\n  // ---\n\n  // Add default pollutant option to dropdown\n  const defaultPollutantOption = document.createElement('option');\n  const html = '<option value=\"0\" selected=\"selected\">Air Parameter</option>';\n\n  defaultPollutantOption.innerHTML = html;\n  document.getElementById('airParametersDropdown').appendChild(defaultPollutantOption);\n\n  // -----\n\n\n  const pollutantsToShow = {};\n  for (const key in allPollutants) {\n    allPollutants[key].forEach((_value) => {\n      if (_value.id === id) {\n        if (!(pollutantsToShow[key])){\n          pollutantsToShow[key] = 0;\n        }\n        pollutantsToShow[key] = _value.value;\n      }\n    });\n  }\n\n  pollutantsToShow['aqi'] = aqi;\n\n  for (const pollutant in pollutantsToShow){\n    const row = measuresTable.insertRow(0);\n    row.className = 'measure';\n\n    const innerCell0 = Pollutants[pollutant].name;\n    const innerCell1 = pollutantsToShow[pollutant] + ' ' + Pollutants[pollutant].unit;\n\n    const cell0 = row.insertCell(0);\n    const cell1 = row.insertCell(1);\n\n\n    cell0.innerHTML = innerCell0;\n    cell1.innerHTML = innerCell1;\n    cell0.className = 'cell';\n    cell1.className = 'cell';\n\n    // Add Pollutants to Chart Dropdown\n    const newPollutant = document.createElement('option');\n\n    // if (pollutant.name === 'aqi'){\n    //   newPollutant.selected = 'selected'\n    // }\n    newPollutant.id = 'pollutantOption';\n    newPollutant.value = pollutant.toUpperCase();\n\n    newPollutant.innerHTML = Pollutants[pollutant].name;\n \n    document.getElementById('airParametersDropdown').appendChild(newPollutant);\n\n    // ----\n  };\n\n  document.getElementById('measuresTable').style.display = 'inherit';\n\n  // showHealthConcerns(e);\n}\n\nfunction showHealthConcerns(risk, color, meaning) {\n  const healthConcernsWrapper = document.getElementById('healthConcernsWrapper');\n  const healthConcerns = document.getElementById('healthConcerns');\n  const healthRisk = document.getElementById('healthRisk');\n\n  healthConcernsWrapper.style.display = 'inherit';\n\n  // const risk = e.target.options.aqiRisk;\n  // const color = e.target.options.aqiColor;\n  // const meaning = e.target.options.aqiMeaning;\n\n  healthConcerns.style.backgroundColor = color;\n  healthRisk.innerHTML = risk;\n}\n\nfunction calculateAQI(aqi) {\n  let aqiIndex;\n  AQI.range.forEach((value, index) => {\n    if (aqi > value && aqi <= AQI.range[index + 1]) {\n      aqiIndex = index;\n    }\n  });\n  return aqiIndex;\n}\n\nfunction drawChart(e) {\n  const currentParameter = currentParameterForChart.toLowerCase();\n\n  const chart = document.getElementById('dataChart');\n  chart.style.display = 'block';\n\n  const id = e.target.options.id;\n  const type = e.target.options.type;\n\n  const values = timeSeries.values[id];\n  let title = '';\n  let parameterUnit = '';\n  let data = [];\n\n  const lastValueMeasure = values[values.length - 1].value;\n\n  const aqiIndex = calculateAQI(lastValueMeasure);\n  // Show Pollutants Legend (MAP)\n  if (type === 'environment') {\n    const allPollutants = timeSeries.pollutants;\n    showPollutants(allPollutants, id, lastValueMeasure);\n    showHealthConcerns(AQI.risks[aqiIndex], AQI.color[aqiIndex], AQI.meaning[aqiIndex]);\n  } else { // Hide legend\n    document.getElementById('healthConcernsWrapper').style.display = 'none';\n    document.getElementById('measuresTable').style.display = 'none';\n\n  }\n  // ------\n\n  parameterUnit = Pollutants[currentParameter].unit;\n\n  title = Pollutants[currentParameter].name + ' - Sensor ' + id;\n\n  if (type === 'environment' && currentParameter !== 'aqi') {\n\n    const parameterChoice = timeSeries.pollutants[currentParameter];\n    \n    parameterChoice.forEach((sensor) => {\n      if (sensor.id === id) {\n        const time = new Date(sensor.time);\n\n        const day = time.getDay();\n        const month = time.getMonth();\n        const year = time.getFullYear();\n        const hour = time.getHours() - 1 ;\n        const minutes = time.getMinutes();\n        const seconds = time.getSeconds();\n\n        data.push([Date.UTC(year, month, day, hour, minutes, seconds), sensor.value]);\n      }\n    });\n  }\n  if ((type === 'environment' && currentParameter === 'aqi')  || type === 'traffic') {\n\n    if(type === 'traffic') {\n      title = 'Cars Count - Sensor ' + id;\n      parameterUnit = 'Cars'\n    }\n\n    values.forEach((value) => {\n      const time = new Date(value.time);\n\n      const day = time.getDay();\n      const month = time.getMonth();\n      const year = time.getFullYear();\n      const hour = time.getHours() - 1 ;\n      const minutes = time.getMinutes();\n      const seconds = time.getSeconds();\n\n      data.push([Date.UTC(year, month, day, hour, minutes, seconds), value.value]);\n    });\n  }\n\n  window.Highcharts.chart('graphContainer', {\n      chart: {\n          zoomType: 'x',\n          backgroundColor: '#1f1d1d'\n      },\n      title: {\n          text: title\n      },\n      subtitle: {\n          text: document.ontouchstart === undefined ? '' : ''\n      },\n      xAxis: {\n          type: 'datetime'\n      },\n      yAxis: {\n          title: {\n              text: parameterUnit\n          }\n      },\n      legend: {\n          enabled: false\n      },\n      plotOptions: {\n          area: {\n              // fillColor: {\n              //   linearGradient: {\n              //     x1: 0,\n              //     y1: 0,\n              //     x2: 0,\n              //     y2: 1\n                // }\n                // stops: [\n                //     [0, '#CCCCCC'],\n                //     [1, '#FFFFFF']\n                // ]\n              // },\n              marker: {\n                  radius: 4\n              },\n              lineWidth: 3,\n              states: {\n                  hover: {\n                      lineWidth: 4\n                  }\n              },\n              threshold: null\n          }\n      },\n\n      series: [{\n          type: 'area',\n          name: title,\n          color: '#CCCCCC',\n          data: data\n      }]\n  });\n}\n"]}