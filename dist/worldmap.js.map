{"version":3,"sources":["../src/worldmap.js"],"names":["showPollutants","e","measuresTable","document","getElementById","rows","deleteRow","el","firstChild","removeChild","circlePollutants","target","options","pollutants","forEach","pollutant","row","insertRow","className","innerCell0","name","toUpperCase","innerCell1","value","cell0","insertCell","cell1","innerHTML","newPollutant","createElement","id","appendChild","style","display","showHealthConcerns","healthConcernsWrapper","healthConcerns","healthRisk","risk","aqiRisk","color","aqiColor","meaning","aqiMeaning","backgroundColor","calculateAQI","aqi","aqiIndex","AQI","range","index","drawChart","currentParameter","currentParameterForChart","toLowerCase","chart","type","values","timeSeries","title","data","parameterChoice","sensor","time","Date","day","getDay","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","seconds","getSeconds","push","UTC","window","Highcharts","zoomType","text","subtitle","ontouchstart","undefined","xAxis","yAxis","legend","enabled","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","marker","radius","lineWidth","states","hover","threshold","series","_","L","carsCount","mapControl","mapZoom","globalCircles","globalMarkers","globalPolylines","currentTargetForChart","tileServers","url","attribution","subdomains","carMarker","icon","iconUrl","iconSize","WorldMap","ctrl","mapContainer","createMap","circles","mapCenter","latLng","parseFloat","panel","mapCenterLatitude","mapCenterLongitude","map","worldCopyJump","center","zoomControl","fitWorld","zoomIn","parseInt","initialZoom","panTo","control","zoom","position","addTo","on","getZoom","selectedTileServer","tileServer","tileLayer","maxZoom","reuseTiles","detectRetina","airParametersDropdown","addEventListener","console","log","filter","o","hideEmpty","isNil","hideZero","circlesLayer","clearLayers","removeCircles","markersLayer","removeMarkers","polylinesLayer","removePolylines","filterEmptyAndZeroValues","clearCircles","clearMarkers","clearPolylines","createTimeSeries","createPoints","valueValues","pollutantsValues","point","pollutantsTemp","dataPoint","newCircle","createCircle","addCircles","createMarker","way","calculatePointPolyline","locationLatitude","locationLongitude","polyline","colorIndex","_value","polygon","weight","smoothFactor","setTarget","removePollDropdown","addPolylines","createPopupPolyline","latitude","longitude","nominatim","urlStart","urlFinish","$","ajax","dataType","cache","success","createPolyline","geojson","coordinates","error","alert","risks","circle","fillOpacity","addPollDropdown","createPopupCircle","label","bindPopup","stickyLabels","onMouseOver","evt","openPopup","onMouseOut","closePopup","trim","invalidateSize","mapCenterMoved","removeFrom","layerGroup","markers","polylines","removeLayer","zoomFactor","setZoom"],"mappings":"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","file":"worldmap.js","sourcesContent":["import _ from 'lodash';\n\nimport Highcharts from './libs/highcharts';\n\n/* eslint-disable id-length, no-unused-vars */\nimport L from './libs/leaflet';\n/* eslint-disable id-length, no-unused-vars */\n\nconst AQI = {\n  'range': [0, 50, 100, 150, 200, 300, 500],\n  'meaning': ['Good', 'Moderate', 'Unhealthy for Sensitive Groups', 'Unhealthy', 'Very Unhealthy', 'Hazardous'],\n  'color': ['#009966', '#ffde33', '#ff9933', '#cc0033', '#660099', '#7e0023'],\n  'risks': ['Air quality is considered satisfactory, and air pollution poses little or no risk.', 'Air quality is acceptable; however, for some pollutants there may be a moderate health concern for a very small number of people who are unusually sensitive to air pollution.', 'Members of sensitive groups may experience health effects. The general public is not likely to be affected.', 'Everyone may begin to experience health effects; members of sensitive groups may experience more serious health effects.', 'Health alert: everyone may experience more serious health effects.', 'Health warnings of emergency conditions. The entire population is more likely to be affected.']\n};\n\nconst carsCount = {\n  'range': [15, 30, 45, 60, 75, 90, 105],\n  'color': ['#009966', '#ffde33', '#ff9933', '#cc0033', '#660099', '#7e0023']\n};\n\nlet timeSeries = {};\n\nlet mapControl;\nlet mapZoom;\n\nlet globalCircles = [];\nlet globalMarkers = [];\nlet globalPolylines = [];\n\nlet currentTargetForChart;\nlet currentParameterForChart = 'aqi';\n\nconst tileServers = {\n  'CartoDB Positron': { url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png', attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>', subdomains: 'abcd'},\n  'CartoDB Dark': {url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png', attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>', subdomains: 'abcd'}\n};\n\nconst carMarker = window.L.icon({\n  iconUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/Map_marker.svg/2000px-Map_marker.svg.png',\n\n  iconSize: [25, 40], // size of the icon\n  // iconAnchor: [15, 82], // point of the icon which will correspond to marker's location\n  // popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor\n});\n\nexport default class WorldMap {\n  constructor(ctrl, mapContainer) {\n    this.ctrl = ctrl;\n    this.mapContainer = mapContainer;\n    this.createMap();\n    this.circles = [];\n  }\n  \n\n  createMap() {\n    const mapCenter = window.L.latLng(parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude));\n    mapControl = this.map = window.L.map(this.mapContainer, {worldCopyJump: true, center: mapCenter, zoomControl: false})\n      .fitWorld()\n      .zoomIn(parseInt(this.ctrl.panel.initialZoom, 5));\n    this.map.panTo(mapCenter);\n    window.L.control.zoom({position: 'topright'}).addTo(this.map);\n\n    this.map.on('zoomstart', (e) => {\n      mapZoom = mapControl.getZoom();\n    });\n\n    this.map.on('click', (e) => {\n      document.getElementById('measuresTable').style.display = 'none';\n      document.getElementById('healthConcernsWrapper').style.display = 'none';\n      document.getElementById('dataChart').style.display = 'none';\n    });\n\n    const selectedTileServer = tileServers[this.ctrl.tileServer];\n    window.L.tileLayer(selectedTileServer.url, {\n      maxZoom: 18,\n      subdomains: selectedTileServer.subdomains,\n      reuseTiles: true,\n      detectRetina: true,\n      attribution: selectedTileServer.attribution\n    }).addTo(this.map, true);\n\n    const airParametersDropdown = document.getElementById('airParametersDropdown');\n\n    airParametersDropdown.addEventListener(\"change\", function() {\n      currentParameterForChart = this.value;\n      console.log(airParametersDropdown.value);\n      drawChart(currentTargetForChart);\n    });\n  }\n\n  filterEmptyAndZeroValues(data) {\n    return _.filter(data, (o) => { return !(this.ctrl.panel.hideEmpty && _.isNil(o.value)) && !(this.ctrl.panel.hideZero && o.value === 0); });\n  }\n\n  clearCircles() {\n    if (this.circlesLayer) {\n      this.circlesLayer.clearLayers();\n      this.removeCircles(this.circlesLayer);\n      globalCircles = [];\n    }\n  }\n  clearMarkers() {\n    if (this.markersLayer) {\n      this.markersLayer.clearLayers();\n      this.removeMarkers(this.markersLayer);\n      globalMarkers = [];\n    }\n  }\n\n  clearPolylines() {\n    if (this.polylinesLayer) {\n      this.polylinesLayer.clearLayers();\n      this.removePolylines(this.polylinesLayer);\n      globalPolylines = [];\n    }\n  }\n\n  drawPoints() {\n    const data = this.filterEmptyAndZeroValues(this.ctrl.data);\n    this.clearCircles();\n    this.clearMarkers();\n    this.clearPolylines();\n\n    timeSeries = {};\n\n    this.createTimeSeries(data);\n\n    this.createPoints(data);\n  }\n\n  createTimeSeries(data) {\n    timeSeries = {};\n    const valueValues = {};\n    const values = [];\n    const pollutantsValues = [];\n\n    data.forEach((point) => {\n      const id = point.id;\n      const time = point.time;\n      let pollutants = '';\n\n      if(point.type === 'environment'){\n        pollutants = point.pollutants;\n      }\n      const value = point.value;\n      \n      if(point.type === 'environment'){\n        const pollutantsTemp = {};\n\n        pollutants.forEach((pollutant) => {\n          if(!(pollutantsValues[pollutant.name])){\n            pollutantsValues[pollutant.name] = [];\n          }\n          pollutantsValues[pollutant.name].push({'time': time, 'value': pollutant.value, 'id': id});\n        });\n      }\n\n      if (!(valueValues[point.id])){\n        valueValues[point.id] = [];\n      }\n      valueValues[point.id].push({'time': time, 'value': value, 'id': id});\n    });\n    timeSeries = {'values': valueValues, 'pollutants': pollutantsValues};\n  }\n\n  createPoints(data) {\n    data.forEach((dataPoint) => {\n      if (dataPoint.type === 'environment') {\n        const newCircle = this.createCircle(dataPoint);\n        globalCircles.push(newCircle);\n        this.circlesLayer = this.addCircles(globalCircles);\n      } else if (dataPoint.type === 'traffic') {\n        this.createMarker(dataPoint);\n        // const newMarker = this.createMarker(dataPoint);\n        // globalMarkers.push(newMarker);\n        // this.markersLayer = this.addMarkers(globalMarkers);\n      } else {\n        console.log('Map point type ' + dataPoint.type + ' invalid. Must be environment or traffic');\n      }\n    });\n  }\n\n  createMarker(dataPoint) {\n    // const marker = window.L.marker([dataPoint.locationLatitude, dataPoint.locationLongitude]);\n    const way = this.calculatePointPolyline(dataPoint.locationLatitude, dataPoint.locationLongitude, dataPoint.value, dataPoint.id, dataPoint.type);\n    // this.createPopupMarker(marker, dataPoint.value);\n    // return marker;\n  }\n\n  createPolyline(way, value, id, type) {\n    const polyline = [];\n    way.forEach((point) => {\n      polyline.push([point[1], point[0]]);\n    });\n\n    let colorIndex;\n    carsCount.range.forEach((_value, index) => {\n      if (value > _value && value <= carsCount.range[index + 1]) {\n        colorIndex = index;\n      }\n    });\n\n    const color = carsCount.color[colorIndex];\n\n    const polygon = window.L.polyline(polyline, {\n      color: color,\n      weight: 5,\n      smoothFactor: 1,\n      id: id,\n      type: type\n    }).on('click', drawChart).on('click', this.setTarget).on('click', this.removePollDropdown);;\n\n    globalPolylines.push(polygon);\n    this.polylinesLayer = this.addPolylines(globalPolylines);\n\n    this.createPopupPolyline(polygon, value);\n  }\n\n  calculatePointPolyline(latitude, longitude, value, id, type) {\n    const way = this.nominatim(latitude, longitude, value, id, type);\n    return way;\n  }\n\n  nominatim(latitude, longitude, value, id, type) {\n    const urlStart = 'http://nominatim.openstreetmap.org/reverse?format=json&';\n    const urlFinish = '&zoom=16&addressdetails=1&polygon_geojson=1';\n\n    window.$.ajax({\n      url: urlStart + 'lat=' + latitude + '&lon=' + longitude + urlFinish,\n      type: 'GET',\n      dataType: 'json',\n      cache: false,\n      success: (data) => {\n        this.createPolyline(data.geojson.coordinates, value, id, type);\n      },\n      error: (error) => {\n        alert('Nominatim ERROR');\n      }\n    });\n  }\n\n  createCircle(dataPoint) {\n    const aqi = calculateAQI(dataPoint.value);\n    const aqiColor = AQI.color[aqi];\n    const aqiMeaning = AQI.meaning[aqi];\n    const aqiRisk = AQI.risks[aqi];\n    const pollutants = dataPoint.pollutants;\n    const id = dataPoint.id;\n    const type = dataPoint.type;\n\n    pollutants.push({'name': 'aqi', 'value': dataPoint.value});\n\n    const circle = window.L.circle([dataPoint.locationLatitude, dataPoint.locationLongitude], 200, {\n      color: aqiColor,\n      fillColor: aqiColor,\n      fillOpacity: 0.5,\n      aqiColor: aqiColor,\n      aqiMeaning: aqiMeaning,\n      aqiRisk: aqiRisk,\n      pollutants: pollutants,\n      id: id,\n      type: type\n    }).on('click', drawChart).on('click', this.setTarget).on('click', this.addPollDropdown);\n\n    this.createPopupCircle(circle, dataPoint.value, aqiMeaning);\n    return circle;\n  \n}\n  addPollDropdown() {\n    document.getElementById('dataDetails').style.display = 'block'\n  }\n\n  removePollDropdown() {\n    document.getElementById('dataDetails').style.display = 'none'\n  }\n\n  createPopupMarker(marker, value) {\n    const label = ('Cars: ' + value);\n    marker.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    marker.on('mouseover', function onMouseOver(evt) {\n      // const layer = evt.target;\n      // layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      marker.on('mouseout', function onMouseOut() {\n        marker.closePopup();\n      });\n    }\n  }\n\n  createPopupCircle(circle, aqi, aqiMeaning) {\n    const label = ('AQI: ' + aqi + ' (' + aqiMeaning + ')').trim();\n    circle.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    circle.on('mouseover', function onMouseOver(evt) {\n      // const layer = evt.target;\n      // layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      circle.on('mouseout', function onMouseOut() {\n        circle.closePopup();\n      });\n    }\n  }\n\n  createPopupPolyline(polyline, value) {\n    const label = ('Number of cars: ' + value).trim();\n    polyline.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    polyline.on('mouseover', function onMouseOver(evt) {\n      // const layer = evt.target;\n      // layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      polyline.on('mouseout', function onMouseOut() {\n        polyline.closePopup();\n      });\n    }\n  }\n\n  setTarget(e) {\n    currentTargetForChart = e;\n  }\n\n  resize() {\n    this.map.invalidateSize();\n  }\n\n  panToMapCenter() {\n    this.map.panTo([parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude)]);\n    this.ctrl.mapCenterMoved = false;\n  }\n\n  removeLegend() {\n    this.legend.removeFrom(this.map);\n    this.legend = null;\n  }\n\n  addCircles(circles) {\n    return window.L.layerGroup(circles).addTo(this.map);\n  }\n  addMarkers(markers) {\n    return window.L.layerGroup(markers).addTo(this.map);\n  }\n\n  addPolylines(polylines) {\n    return window.L.layerGroup(polylines).addTo(this.map);\n  }\n\n  removeCircles() {\n    this.map.removeLayer(this.circlesLayer);\n  }\n\n  removeMarkers() {\n    this.map.removeLayer(this.markersLayer);\n  }\n\n  removePolylines() {\n    this.map.removeLayer(this.polylinesLayer);\n  }\n\n  setZoom(zoomFactor) {\n    this.map.setZoom(parseInt(zoomFactor, 10));\n  }\n}\n\nfunction showPollutants(e) {\n  const measuresTable = document.getElementById('measures-table');\n\n  while (measuresTable.rows[0]) measuresTable.deleteRow(0);\n\n  // Remove air paramters from dropdown\n  var el = document.getElementById('airParametersDropdown');\n  while ( el.firstChild ) {\n    el.removeChild( el.firstChild )\n  }\n\n  // ---\n\n  // Add default pollutant option\n  // const defaultPollutantOption = document.createElement('option');\n  // const html = '<option value=\"aqi\" selected=\"selected\">AQI</option>';\n\n  // defaultPollutantOption.innerHTML = html;\n  // document.getElementById('airParametersDropdown').appendChild(defaultPollutantOption);\n\n  // -----\n  const circlePollutants = e.target.options.pollutants;\n\n  circlePollutants.forEach((pollutant) => {\n    const row = measuresTable.insertRow(0);\n    row.className = 'measure';\n\n    const innerCell0 = pollutant.name.toUpperCase();\n    const innerCell1 = pollutant.value;\n\n    const cell0 = row.insertCell(0);\n    const cell1 = row.insertCell(1);\n\n\n    cell0.innerHTML = innerCell0;\n    cell1.innerHTML = innerCell1;\n    cell0.className = 'cell';\n    cell1.className = 'cell';\n\n    // Add Pollutants to Chart Dropdown\n    const newPollutant = document.createElement('option');\n\n    // if (pollutant.name === 'aqi'){\n    //   newPollutant.selected = 'selected'\n    // }\n    newPollutant.id = 'pollutantOption';\n    newPollutant.value = pollutant.name.toUpperCase();\n\n    newPollutant.innerHTML = pollutant.name.toUpperCase();\n \n    document.getElementById('airParametersDropdown').appendChild(newPollutant);\n\n    // ----\n  });\n\n  document.getElementById('measuresTable').style.display = 'inherit';\n\n  showHealthConcerns(e);\n}\n\nfunction showHealthConcerns(e) {\n  const healthConcernsWrapper = document.getElementById('healthConcernsWrapper');\n  const healthConcerns = document.getElementById('healthConcerns');\n  const healthRisk = document.getElementById('healthRisk');\n\n  healthConcernsWrapper.style.display = 'inherit';\n\n  const risk = e.target.options.aqiRisk;\n  const color = e.target.options.aqiColor;\n  const meaning = e.target.options.aqiMeaning;\n\n  healthConcerns.style.backgroundColor = color;\n  healthRisk.innerHTML = risk;\n}\n\nfunction calculateAQI(aqi) {\n  let aqiIndex;\n  AQI.range.forEach((value, index) => {\n    if (aqi > value && aqi <= AQI.range[index + 1]) {\n      aqiIndex = index;\n    }\n  });\n  return aqiIndex;\n}\n\n\nfunction drawChart(e) {\n  const currentParameter = currentParameterForChart.toLowerCase();\n\n  const chart = document.getElementById('dataChart');\n  chart.style.display = 'block';\n\n  const id = e.target.options.id;\n  const type = e.target.options.type;\n\n  const values = timeSeries.values[id];\n  let title = '';\n  let data = [];\n\n  if (type === 'environment') {\n    showPollutants(e);\n  }\n\n  if (type === 'environment' && currentParameter !== 'aqi') {\n\n    const parameterChoice = timeSeries.pollutants[currentParameter];\n    \n    parameterChoice.forEach((sensor) => {\n      if (sensor.id === id) {\n        const time = new Date(sensor.time);\n\n        const day = time.getDay();\n        const month = time.getMonth();\n        const year = time.getFullYear();\n        const hour = time.getHours() - 1 ;\n        const minutes = time.getMinutes();\n        const seconds = time.getSeconds();\n\n        data.push([Date.UTC(year, month, day, hour, minutes, seconds), sensor.value]);\n      }\n    });\n\n    title = currentParameter.toUpperCase() + ' values for sensor ' + id;\n  }\n  if ((type === 'environment' && currentParameter === 'aqi')  || type === 'traffic') {\n\n    if(type === 'traffic') {\n      title = 'Number of cars for sensor ' + id;\n    }\n\n    values.forEach((value) => {\n      const time = new Date(value.time);\n\n      const day = time.getDay();\n      const month = time.getMonth();\n      const year = time.getFullYear();\n      const hour = time.getHours() - 1 ;\n      const minutes = time.getMinutes();\n      const seconds = time.getSeconds();\n\n      data.push([Date.UTC(year, month, day, hour, minutes, seconds), value.value]);\n    });\n  }\n\n  window.Highcharts.chart('graphContainer', {\n      chart: {\n          zoomType: 'x',\n          backgroundColor: '#1f1d1d'\n      },\n      title: {\n          text: title\n      },\n      subtitle: {\n          text: document.ontouchstart === undefined ? '' : ''\n      },\n      xAxis: {\n          type: 'datetime'\n      },\n      yAxis: {\n          title: {\n              text: title\n          }\n      },\n      legend: {\n          enabled: false\n      },\n      plotOptions: {\n          area: {\n              fillColor: {\n                linearGradient: {\n                  x1: 0,\n                  y1: 0,\n                  x2: 0,\n                  y2: 1\n                },\n                stops: [\n                    [0, '#009933'],\n                    [1, '#00FFFFFF']\n                ]\n              },\n              marker: {\n                  radius: 3\n              },\n              lineWidth: 2,\n              states: {\n                  hover: {\n                      lineWidth: 3\n                  }\n              },\n              threshold: null\n          }\n      },\n\n      series: [{\n          type: 'area',\n          name: title,\n          color: '#009933',\n          data: data\n      }]\n  });\n}\n"]}