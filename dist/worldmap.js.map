{"version":3,"sources":["../src/worldmap.js"],"names":["showPollutants","providedPollutants","allPollutants","id","aqi","measuresTable","document","getElementById","rows","deleteRow","el","firstChild","removeChild","defaultPollutantOption","createElement","html","innerHTML","appendChild","pollutantsToShow","key","forEach","_value","value","pollutant","row","insertRow","className","innerCell0","name","innerCell1","unit","cell0","insertCell","cell1","newPollutant","toUpperCase","mapDivHeight","getElementsByClassName","offsetHeight","mapDivWidth","offsetWidth","console","log","style","display","showHealthConcerns","risk","color","meaning","healthConcernsWrapper","healthConcerns","healthRisk","backgroundColor","calculateAQI","aqiIndex","AQI","range","index","drawChart","e","currentParameter","currentParameterForChart","toLowerCase","chart","target","options","type","values","timeSeries","title","parameterUnit","data","lastValueMeasure","length","pollutants","risks","parameterChoice","sensor","time","Date","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","push","UTC","window","Highcharts","zoomType","text","subtitle","ontouchstart","undefined","xAxis","yAxis","legend","enabled","plotOptions","area","marker","radius","lineWidth","states","hover","threshold","series","_","L","carsCount","mapControl","mapZoom","globalCircles","globalMarkers","globalPolylines","currentTargetForChart","tileServers","url","attribution","subdomains","carMarker","icon","iconUrl","iconSize","WorldMap","ctrl","mapContainer","createMap","circles","mapCenter","latLng","parseFloat","panel","mapCenterLatitude","mapCenterLongitude","map","worldCopyJump","center","zoomControl","attributionControl","fitWorld","zoomIn","parseInt","initialZoom","panTo","control","zoom","position","addTo","on","getZoom","JSON","parse","selectedTileServer","tileServer","tileLayer","maxZoom","reuseTiles","detectRetina","airParametersDropdown","addEventListener","filter","o","hideEmpty","isNil","hideZero","circlesLayer","clearLayers","removeCircles","markersLayer","removeMarkers","polylinesLayer","removePolylines","finalData","auxData","locationLatitude","locationLongitude","hideAllTables","filterEmptyAndZeroValues","clearCircles","clearMarkers","clearPolylines","treatedData","dataTreatment","createTimeSeries","createPoints","valueValues","pollutantsValues","Object","keys","point","pollutantsTemp","newCircle","createCircle","addCircles","createMarker","dataPoint","way","calculatePointPolyline","polyline","colorIndex","polygon","weight","smoothFactor","setTarget","removePollDropdown","addPolylines","createPopupPolyline","latitude","longitude","nominatim","urlStart","urlFinish","$","ajax","dataType","cache","success","createPolyline","geojson","coordinates","error","aqiColor","aqiMeaning","aqiRisk","circle","fillColor","fillOpacity","addPollDropdown","createPopupCircle","label","bindPopup","stickyLabels","onMouseOver","evt","openPopup","onMouseOut","closePopup","trim","invalidateSize","mapCenterMoved","removeFrom","layerGroup","markers","polylines","removeLayer","zoomFactor","setZoom"],"mappings":";;;;;;;;;;;;;AAscA,WAASA,cAAT,CAAwBC,kBAAxB,EAA4CC,aAA5C,EAA2DC,EAA3D,EAA+DC,GAA/D,EAAoE;;AAElE,QAAMC,gBAAgBC,SAASC,cAAT,CAAwB,gBAAxB,CAAtB;;AAEA,WAAOF,cAAcG,IAAd,CAAmB,CAAnB,CAAP;AAA8BH,oBAAcI,SAAd,CAAwB,CAAxB;AAA9B,KAJkE,CAMlE;AACA,QAAIC,KAAKJ,SAASC,cAAT,CAAwB,uBAAxB,CAAT;AACA,WAAQG,GAAGC,UAAX,EAAwB;AACtBD,SAAGE,WAAH,CAAgBF,GAAGC,UAAnB;AACD;;AAED;;AAEA;AACA,QAAME,yBAAyBP,SAASQ,aAAT,CAAuB,QAAvB,CAA/B;AACA,QAAMC,OAAO,8DAAb;;AAEAF,2BAAuBG,SAAvB,GAAmCD,IAAnC;AACAT,aAASC,cAAT,CAAwB,uBAAxB,EAAiDU,WAAjD,CAA6DJ,sBAA7D;;AAEA;;;AAGA,QAAMK,mBAAmB,EAAzB;;AAxBkE,+BAyBvDC,GAzBuD;AA0BhEjB,oBAAciB,GAAd,EAAmBC,OAAnB,CAA2B,UAACC,MAAD,EAAY;AACrC,YAAIA,OAAOlB,EAAP,KAAcA,EAAlB,EAAsB;AACpB,cAAI,CAAEe,iBAAiBC,GAAjB,CAAN,EAA6B;AAC3BD,6BAAiBC,GAAjB,IAAwB,CAAxB;AACD;AACDD,2BAAiBC,GAAjB,IAAwBE,OAAOC,KAA/B;AACD;AACF,OAPD;AA1BgE;;AAyBlE,SAAK,IAAMH,GAAX,IAAkBjB,aAAlB,EAAiC;AAAA,YAAtBiB,GAAsB;AAShC;;AAEDD,qBAAiB,KAAjB,IAA0Bd,GAA1B;;AAEA,SAAK,IAAMmB,SAAX,IAAwBL,gBAAxB,EAAyC;AACvC,UAAMM,MAAMnB,cAAcoB,SAAd,CAAwB,CAAxB,CAAZ;AACAD,UAAIE,SAAJ,GAAgB,SAAhB;;AAEA,UAAMC,aAAa1B,mBAAmBsB,SAAnB,EAA8BK,IAAjD;AACA,UAAMC,aAAaX,iBAAiBK,SAAjB,IAA8B,GAA9B,GAAoCtB,mBAAmBsB,SAAnB,EAA8BO,IAArF;;AAEA,UAAMC,QAAQP,IAAIQ,UAAJ,CAAe,CAAf,CAAd;AACA,UAAMC,QAAQT,IAAIQ,UAAJ,CAAe,CAAf,CAAd;;AAGAD,YAAMf,SAAN,GAAkBW,UAAlB;AACAM,YAAMjB,SAAN,GAAkBa,UAAlB;AACAE,YAAML,SAAN,GAAkB,MAAlB;AACAO,YAAMP,SAAN,GAAkB,MAAlB;;AAEA;AACA,UAAMQ,eAAe5B,SAASQ,aAAT,CAAuB,QAAvB,CAArB;;AAEAoB,mBAAa/B,EAAb,GAAkB,iBAAlB;AACA+B,mBAAaZ,KAAb,GAAqBC,UAAUY,WAAV,EAArB;;AAEAD,mBAAalB,SAAb,GAAyBf,mBAAmBsB,SAAnB,EAA8BK,IAAvD;;AAEAtB,eAASC,cAAT,CAAwB,uBAAxB,EAAiDU,WAAjD,CAA6DiB,YAA7D;;AAEA;AACD;AACD,QAAME,eAAe9B,SAAS+B,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDC,YAAxE;AACA,QAAMC,cAAcjC,SAAS+B,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDG,WAAvE;AACAC,YAAQC,GAAR,CAAYN,YAAZ,EAA0BG,WAA1B;AACA;AACA,QAAIH,gBAAgB,GAAhB,IAAuBG,eAAe,GAA1C,EAA+C;AAC7CjC,eAASC,cAAT,CAAwB,kBAAxB,EAA4CoC,KAA5C,CAAkDC,OAAlD,GAA4D,OAA5D;AACAtC,eAASC,cAAT,CAAwB,eAAxB,EAAyCoC,KAAzC,CAA+CC,OAA/C,GAAyD,OAAzD;AACD;AACF;;AAED,WAASC,kBAAT,CAA4B5C,kBAA5B,EAAgD6C,IAAhD,EAAsDC,KAAtD,EAA6DC,OAA7D,EAAsE;AACpE,QAAMC,wBAAwB3C,SAASC,cAAT,CAAwB,uBAAxB,CAA9B;AACA,QAAM2C,iBAAiB5C,SAASC,cAAT,CAAwB,gBAAxB,CAAvB;AACA,QAAM4C,aAAa7C,SAASC,cAAT,CAAwB,YAAxB,CAAnB;;AAEA,QAAM6B,eAAe9B,SAAS+B,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDC,YAAxE;AACA,QAAMC,cAAcjC,SAAS+B,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDG,WAAvE;;AAEA;AACA,QAAIJ,gBAAgB,GAAhB,IAAuBG,eAAe,GAA1C,EAA+C;AAC7CU,4BAAsBN,KAAtB,CAA4BC,OAA5B,GAAsC,OAAtC;AACAM,qBAAeP,KAAf,CAAqBS,eAArB,GAAuCL,KAAvC;AACAI,iBAAWnC,SAAX,GAAuB8B,IAAvB;AACD;AACF;;AAED,WAASO,YAAT,CAAsBjD,GAAtB,EAA2B;AACzB,QAAIkD,iBAAJ;AACAC,QAAIC,KAAJ,CAAUpC,OAAV,CAAkB,UAACE,KAAD,EAAQmC,KAAR,EAAkB;AAClC,UAAIrD,MAAMkB,KAAN,IAAelB,OAAOmD,IAAIC,KAAJ,CAAUC,QAAQ,CAAlB,CAA1B,EAAgD;AAC9CH,mBAAWG,KAAX;AACD;AACF,KAJD;AAKA,WAAOH,QAAP;AACD;;AAED,WAASI,SAAT,CAAmBzD,kBAAnB,EAAuC0D,CAAvC,EAA0C;AACxC,QAAMC,mBAAmBC,yBAAyBC,WAAzB,EAAzB;;AAEA,QAAMC,QAAQzD,SAASC,cAAT,CAAwB,WAAxB,CAAd;AACAwD,UAAMpB,KAAN,CAAYC,OAAZ,GAAsB,OAAtB;;AAEA,QAAMzC,KAAKwD,EAAEK,MAAF,CAASC,OAAT,CAAiB9D,EAA5B;AACA,QAAM+D,OAAOP,EAAEK,MAAF,CAASC,OAAT,CAAiBC,IAA9B;;AAEA,QAAMC,SAASC,WAAWD,MAAX,CAAkBhE,EAAlB,CAAf;AACA,QAAIkE,QAAQ,EAAZ;AACA,QAAIC,gBAAgB,EAApB;AACA,QAAIC,OAAO,EAAX;;AAEA,QAAMC,mBAAmBL,OAAOA,OAAOM,MAAP,GAAgB,CAAvB,EAA0BnD,KAAnD;;AAEA,QAAMgC,WAAWD,aAAamB,gBAAb,CAAjB;;AAEA;AACA,QAAIN,SAAS,aAAb,EAA4B;AAC1B,UAAMhE,gBAAgBkE,WAAWM,UAAjC;AACA1E,qBAAeC,kBAAf,EAAmCC,aAAnC,EAAkDC,EAAlD,EAAsDqE,gBAAtD;AACA3B,yBAAmB5C,kBAAnB,EAAuCsD,IAAIoB,KAAJ,CAAUrB,QAAV,CAAvC,EAA4DC,IAAIR,KAAJ,CAAUO,QAAV,CAA5D,EAAiFC,IAAIP,OAAJ,CAAYM,QAAZ,CAAjF;AACD,KAJD,MAIO;AAAE;AACP,UAAMlB,eAAe9B,SAAS+B,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDC,YAAxE;AACA,UAAMC,cAAcjC,SAAS+B,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDG,WAAvE;;AAEA,UAAIJ,gBAAgB,GAAhB,IAAuBG,eAAe,GAA1C,EAA+C;AAC7CjC,iBAASC,cAAT,CAAwB,cAAxB,EAAwCoC,KAAxC,CAA8CC,OAA9C,GAAwD,OAAxD;AACD;AACDtC,eAASC,cAAT,CAAwB,uBAAxB,EAAiDoC,KAAjD,CAAuDC,OAAvD,GAAiE,MAAjE;AACAtC,eAASC,cAAT,CAAwB,eAAxB,EAAyCoC,KAAzC,CAA+CC,OAA/C,GAAyD,MAAzD;AAED;AACD;;AAEA0B,oBAAgBrE,mBAAmB2D,gBAAnB,EAAqC9B,IAArD;;AAEAuC,YAAQpE,mBAAmB2D,gBAAnB,EAAqChC,IAArC,GAA4C,YAA5C,GAA2DzB,EAAnE;;AAEA,QAAI+D,SAAS,aAAT,IAA0BN,qBAAqB,KAAnD,EAA0D;;AAExD,UAAMgB,kBAAkBR,WAAWM,UAAX,CAAsBd,gBAAtB,CAAxB;;AAEAgB,sBAAgBxD,OAAhB,CAAwB,UAACyD,MAAD,EAAY;AAClC,YAAIA,OAAO1E,EAAP,KAAcA,EAAlB,EAAsB;AACpB,cAAM2E,OAAO,IAAIC,IAAJ,CAASF,OAAOC,IAAhB,CAAb;;AAEA,cAAME,MAAMF,KAAKG,OAAL,EAAZ;AACA,cAAMC,QAAQJ,KAAKK,QAAL,EAAd;AACA,cAAMC,OAAON,KAAKO,WAAL,EAAb;AACA,cAAMC,OAAOR,KAAKS,QAAL,KAAkB,CAA/B;AACA,cAAMC,UAAUV,KAAKW,UAAL,EAAhB;AACA,cAAMC,UAAUZ,KAAKa,UAAL,EAAhB;AACA,cAAMC,eAAed,KAAKe,eAAL,EAArB;;AAEAtB,eAAKuB,IAAL,CAAU,CAACf,KAAKgB,GAAL,CAASX,IAAT,EAAeF,KAAf,EAAsBF,GAAtB,EAA2BM,IAA3B,EAAiCE,OAAjC,EAA0CE,OAA1C,EAAmDE,YAAnD,CAAD,EAAmEf,OAAOvD,KAA1E,CAAV;AACD;AACF,OAdD;AAeD;AACD,QAAK4C,SAAS,aAAT,IAA0BN,qBAAqB,KAAhD,IAA2DM,SAAS,SAAxE,EAAmF;;AAEjF,UAAGA,SAAS,SAAZ,EAAuB;AACrBG,gBAAQ,yBAAyBlE,EAAjC;AACAmE,wBAAgB,MAAhB;AACD;;AAEDH,aAAO/C,OAAP,CAAe,UAACE,KAAD,EAAW;AACxB,YAAMwD,OAAO,IAAIC,IAAJ,CAASzD,MAAMwD,IAAf,CAAb;;AAEA,YAAME,MAAMF,KAAKG,OAAL,EAAZ;AACA,YAAMC,QAAQJ,KAAKK,QAAL,EAAd;AACA,YAAMC,OAAON,KAAKO,WAAL,EAAb;AACA,YAAMC,OAAOR,KAAKS,QAAL,KAAkB,CAA/B;AACA,YAAMC,UAAUV,KAAKW,UAAL,EAAhB;AACA,YAAMC,UAAUZ,KAAKa,UAAL,EAAhB;AACA,YAAMC,eAAed,KAAKe,eAAL,EAArB;;AAEAtB,aAAKuB,IAAL,CAAU,CAACf,KAAKgB,GAAL,CAASX,IAAT,EAAeF,KAAf,EAAsBF,GAAtB,EAA2BM,IAA3B,EAAiCE,OAAjC,EAA0CE,OAA1C,EAAmDE,YAAnD,CAAD,EAAmEtE,MAAMA,KAAzE,CAAV;AACD,OAZD;AAaD;;AAED0E,WAAOC,UAAP,CAAkBlC,KAAlB,CAAwB,gBAAxB,EAA0C;AACtCA,aAAO;AACHmC,kBAAU,GADP;AAEH9C,yBAAiB;AAFd,OAD+B;AAKtCiB,aAAO;AACH8B,cAAM9B;AADH,OAL+B;AAQtC+B,gBAAU;AACND,cAAM7F,SAAS+F,YAAT,KAA0BC,SAA1B,GAAsC,EAAtC,GAA2C;AAD3C,OAR4B;AAWtCC,aAAO;AACHrC,cAAM;AADH,OAX+B;AActCsC,aAAO;AACHnC,eAAO;AACH8B,gBAAM7B;AADH;AADJ,OAd+B;AAmBtCmC,cAAQ;AACJC,iBAAS;AADL,OAnB8B;AAsBtCC,mBAAa;AACTC,cAAM;AACF;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACF;AACAC,kBAAQ;AACJC,oBAAQ;AADJ,WAbN;AAgBFC,qBAAW,CAhBT;AAiBFC,kBAAQ;AACJC,mBAAO;AACHF,yBAAW;AADR;AADH,WAjBN;AAsBFG,qBAAW;AAtBT;AADG,OAtByB;;AAiDtCC,cAAQ,CAAC;AACLjD,cAAM,MADD;AAELtC,cAAMyC,KAFD;AAGLtB,eAAO,SAHF;AAILwB,cAAMA;AAJD,OAAD;AAjD8B,KAA1C;AAwDD;;;AAtrBM6C,O;;AAEAnB,gB;;AAGAoB,O;;;;;;;;;;;;;;;;;;;;;AAGD9D,S,GAAM;AACV,iBAAS,CAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,CADC;AAEV,mBAAW,CAAC,MAAD,EAAS,UAAT,EAAqB,gCAArB,EAAuD,WAAvD,EAAoE,gBAApE,EAAsF,WAAtF,CAFD;AAGV,iBAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,CAHC;AAIV,iBAAS,CAAC,oFAAD,EAAuF,gLAAvF,EAAyQ,6GAAzQ,EAAwX,0HAAxX,EAAof,oEAApf,EAA0jB,+FAA1jB;AAJC,O;AAON+D,e,GAAY;AAChB,iBAAS,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,GAAxB,CADO;AAEhB,iBAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD;AAFO,O;AAKdrH,wB;AAEAmE,gB,GAAa,E;AAEbmD,gB;AACAC,a;AAEAC,mB,GAAgB,E;AAChBC,mB,GAAgB,E;AAChBC,qB,GAAkB,E;AAElBC,2B,GAAwB,I;AACxB/D,8B,GAA2B,K;AAEzBgE,iB,GAAc;AAClB,4BAAoB,EAAEC,KAAK,8EAAP,EAAuFC,aAAa,wIAApG,EAA8OC,YAAY,MAA1P,EADF;AAElB,wBAAgB,EAACF,KAAK,6EAAN,EAAqFC,aAAa,wIAAlG,EAA4OC,YAAY,MAAxP;AAFE,O;AAIdC,e,GAAYjC,OAAOqB,CAAP,CAASa,IAAT,CAAc;AAC9BC,iBAAS,oGADqB;;AAG9BC,kBAAU,CAAC,EAAD,EAAK,EAAL,CAHoB,CAGV;AACpB;AACA;AAL8B,OAAd,C;;AAQGC,c;AACnB,0BAAYC,IAAZ,EAAkBC,YAAlB,EAAgC;AAAA;;AAC9B,eAAKD,IAAL,GAAYA,IAAZ;AACA,eAAKC,YAAL,GAAoBA,YAApB;AACA,eAAKC,SAAL;AACA,eAAKC,OAAL,GAAe,EAAf;AACD;;;;sCAEW;AACV,gBAAMC,YAAY1C,OAAOqB,CAAP,CAASsB,MAAT,CAAgBC,WAAW,KAAKN,IAAL,CAAUO,KAAV,CAAgBC,iBAA3B,CAAhB,EAA+DF,WAAW,KAAKN,IAAL,CAAUO,KAAV,CAAgBE,kBAA3B,CAA/D,CAAlB;AACAxB,yBAAa,KAAKyB,GAAL,GAAWhD,OAAOqB,CAAP,CAAS2B,GAAT,CAAa,KAAKT,YAAlB,EAAgC,EAACU,eAAe,IAAhB,EAAsBC,QAAQR,SAA9B,EAAyCS,aAAa,KAAtD,EAA6DC,oBAAoB,KAAjF,EAAhC,EACrBC,QADqB,GAErBC,MAFqB,CAEdC,SAAS,KAAKjB,IAAL,CAAUO,KAAV,CAAgBW,WAAzB,EAAsC,CAAtC,CAFc,CAAxB;AAGA,iBAAKR,GAAL,CAASS,KAAT,CAAef,SAAf;AACA1C,mBAAOqB,CAAP,CAASqC,OAAT,CAAiBC,IAAjB,CAAsB,EAACC,UAAU,UAAX,EAAtB,EAA8CC,KAA9C,CAAoD,KAAKb,GAAzD;;AAEA,iBAAKA,GAAL,CAASc,EAAT,CAAY,WAAZ,EAAyB,UAACnG,CAAD,EAAO;AAC9B6D,wBAAUD,WAAWwC,OAAX,EAAV;AACD,aAFD;;AAIA9J,iCAAqB+J,KAAKC,KAAL,CAAW,KAAK3B,IAAL,CAAUO,KAAV,CAAgBnE,UAA3B,CAArB;;AAEA,iBAAKsE,GAAL,CAASc,EAAT,CAAY,OAAZ,EAAqB,UAACnG,CAAD,EAAO;AAC1BrD,uBAASC,cAAT,CAAwB,eAAxB,EAAyCoC,KAAzC,CAA+CC,OAA/C,GAAyD,MAAzD;AACAtC,uBAASC,cAAT,CAAwB,uBAAxB,EAAiDoC,KAAjD,CAAuDC,OAAvD,GAAiE,MAAjE;AACAtC,uBAASC,cAAT,CAAwB,WAAxB,EAAqCoC,KAArC,CAA2CC,OAA3C,GAAqD,MAArD;AACAtC,uBAASC,cAAT,CAAwB,kBAAxB,EAA4CoC,KAA5C,CAAkDC,OAAlD,GAA4D,MAA5D;AACAtC,uBAASC,cAAT,CAAwB,cAAxB,EAAwCoC,KAAxC,CAA8CC,OAA9C,GAAwD,MAAxD;AACD,aAND;;AAQA,gBAAMsH,qBAAqBrC,YAAY,KAAKS,IAAL,CAAU6B,UAAtB,CAA3B;AACAnE,mBAAOqB,CAAP,CAAS+C,SAAT,CAAmBF,mBAAmBpC,GAAtC,EAA2C;AACzCuC,uBAAS,EADgC;AAEzCrC,0BAAYkC,mBAAmBlC,UAFU;AAGzCsC,0BAAY,IAH6B;AAIzCC,4BAAc,IAJ2B;AAKzCxC,2BAAamC,mBAAmBnC;AALS,aAA3C,EAMG8B,KANH,CAMS,KAAKb,GANd,EAMmB,IANnB;;AAQA,gBAAMwB,wBAAwBlK,SAASC,cAAT,CAAwB,uBAAxB,CAA9B;;AAEAiK,kCAAsBC,gBAAtB,CAAuC,QAAvC,EAAiD,YAAW;AAC1D5G,yCAA2B,KAAKvC,KAAhC;AACAoC,wBAAUzD,kBAAV,EAA8B2H,qBAA9B;AACD,aAHD;AAKD;;;mDAEwBrD,I,EAAM;AAAA;;AAC7B,mBAAO6C,EAAEsD,MAAF,CAASnG,IAAT,EAAe,UAACoG,CAAD,EAAO;AAAE,qBAAO,EAAE,MAAKrC,IAAL,CAAUO,KAAV,CAAgB+B,SAAhB,IAA6BxD,EAAEyD,KAAF,CAAQF,EAAErJ,KAAV,CAA/B,KAAoD,EAAE,MAAKgH,IAAL,CAAUO,KAAV,CAAgBiC,QAAhB,IAA4BH,EAAErJ,KAAF,KAAY,CAA1C,CAA3D;AAA0G,aAAlI,CAAP;AACD;;;yCAEc;AACb,gBAAI,KAAKyJ,YAAT,EAAuB;AACrB,mBAAKA,YAAL,CAAkBC,WAAlB;AACA,mBAAKC,aAAL,CAAmB,KAAKF,YAAxB;AACAtD,8BAAgB,EAAhB;AACD;AACF;;;yCACc;AACb,gBAAI,KAAKyD,YAAT,EAAuB;AACrB,mBAAKA,YAAL,CAAkBF,WAAlB;AACA,mBAAKG,aAAL,CAAmB,KAAKD,YAAxB;AACAxD,8BAAgB,EAAhB;AACD;AACF;;;2CAEgB;AACf,gBAAI,KAAK0D,cAAT,EAAyB;AACvB,mBAAKA,cAAL,CAAoBJ,WAApB;AACA,mBAAKK,eAAL,CAAqB,KAAKD,cAA1B;AACAzD,gCAAkB,EAAlB;AACD;AACF;;;wCAEapD,I,EAAM;AAClB,gBAAM+G,YAAY,EAAlB;AACA,gBAAIC,UAAU,EAAd;;AAEAhH,iBAAKnD,OAAL,CAAa,UAACE,KAAD,EAAW;AACtB,kBAAI,CAAEgK,UAAUhK,MAAMnB,EAAhB,CAAN,EAA4B;AAC1BmL,0BAAUhK,MAAMnB,EAAhB,IAAsB,EAAtB;AACD;AACD,kBAAImB,MAAM4C,IAAN,KAAe,aAAnB,EAAiC;AAC7BoH,0BAAUhK,MAAMnB,EAAhB,EAAoB2F,IAApB,CAAyB,EAAC,MAAMxE,MAAMnB,EAAb,EAAiB,oBAAoBmB,MAAMkK,gBAA3C,EAA6D,qBAAqBlK,MAAMmK,iBAAxF,EAA2G,QAAQnK,MAAMwD,IAAzH,EAA+H,QAAQxD,MAAM4C,IAA7I,EAAmJ,SAAS5C,MAAMA,KAAlK,EAAwK,cAAcA,MAAMoD,UAA5L,EAAzB;AACH,eAFD,MAGK;AACD4G,0BAAUhK,MAAMnB,EAAhB,EAAoB2F,IAApB,CAAyB,EAAC,MAAMxE,MAAMnB,EAAb,EAAiB,oBAAoBmB,MAAMkK,gBAA3C,EAA6D,qBAAqBlK,MAAMmK,iBAAxF,EAA2G,QAAQnK,MAAMwD,IAAzH,EAA+H,QAAQxD,MAAM4C,IAA7I,EAAmJ,SAAS5C,MAAMA,KAAlK,EAAzB;AACH;AACF,aAVD;;AAYA,mBAAOgK,SAAP;AACD;;;uCAEY;AACX,iBAAKI,aAAL;;AAEA,gBAAMnH,OAAO,KAAKoH,wBAAL,CAA8B,KAAKrD,IAAL,CAAU/D,IAAxC,CAAb;AACA,iBAAKqH,YAAL;AACA,iBAAKC,YAAL;AACA,iBAAKC,cAAL;;AAEA1H,yBAAa,EAAb;;AAEA,gBAAM2H,cAAc,KAAKC,aAAL,CAAmBzH,IAAnB,CAApB;;AAEA,iBAAK0H,gBAAL,CAAsBF,WAAtB;AACA,iBAAKG,YAAL,CAAkBH,WAAlB;;AAEA;AACA,gBAAInE,0BAA0B,IAA9B,EAAmC;AACjClE,wBAAUzD,kBAAV,EAA8B2H,qBAA9B;AACD;AACF;;;0CAEe;AACd,gBAAMxF,eAAe9B,SAAS+B,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDC,YAAxE;AACA,gBAAMC,cAAcjC,SAAS+B,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDG,WAAvE;;AAEA;AACA,gBAAIJ,gBAAgB,GAAhB,IAAuBA,gBAAgB,GAA3C,EAAgD;AAC9C9B,uBAASC,cAAT,CAAwB,eAAxB,EAAyCoC,KAAzC,CAA+CC,OAA/C,GAAyD,MAAzD;AACAtC,uBAASC,cAAT,CAAwB,uBAAxB,EAAiDoC,KAAjD,CAAuDC,OAAvD,GAAiE,MAAjE;AACAtC,uBAASC,cAAT,CAAwB,kBAAxB,EAA4CoC,KAA5C,CAAkDC,OAAlD,GAA4D,MAA5D;AACAtC,uBAASC,cAAT,CAAwB,cAAxB,EAAwCoC,KAAxC,CAA8CC,OAA9C,GAAwD,MAAxD;AACD;AACF;;;2CAEgB2B,I,EAAM;AACrBH,yBAAa,EAAb;AACA,gBAAM+H,cAAc,EAApB;AACA,gBAAMhI,SAAS,EAAf;AACA,gBAAMiI,mBAAmB,EAAzB;;AAEAC,mBAAOC,IAAP,CAAY/H,IAAZ,EAAkBnD,OAAlB,CAA0B,UAACD,GAAD,EAAS;AACjCoD,mBAAKpD,GAAL,EAAUC,OAAV,CAAkB,UAACmL,KAAD,EAAW;AAC3B,oBAAMpM,KAAKoM,MAAMpM,EAAjB;AACA,oBAAM2E,OAAOyH,MAAMzH,IAAnB;AACA,oBAAIJ,aAAa,EAAjB;;AAEA,oBAAI6H,MAAMrI,IAAN,KAAe,aAAnB,EAAkC;AAChCQ,+BAAa6H,MAAM7H,UAAnB;AACD;AACD,oBAAMpD,QAAQiL,MAAMjL,KAApB;AACA,oBAAIiL,MAAMrI,IAAN,KAAe,aAAnB,EAAkC;AAChC,sBAAMsI,iBAAiB,EAAvB;;AAEA9H,6BAAWtD,OAAX,CAAmB,UAACG,SAAD,EAAe;AAChC,wBAAI,CAAE6K,iBAAiB7K,UAAUK,IAA3B,CAAN,EAAyC;AACvCwK,uCAAiB7K,UAAUK,IAA3B,IAAmC,EAAnC;AACD;AACDwK,qCAAiB7K,UAAUK,IAA3B,EAAiCkE,IAAjC,CAAsC,EAAC,QAAQhB,IAAT,EAAe,SAASvD,UAAUD,KAAlC,EAAyC,MAAMnB,EAA/C,EAAtC;AACD,mBALD;AAMD;;AAED,oBAAI,CAAEgM,YAAYI,MAAMpM,EAAlB,CAAN,EAA8B;AAC5BgM,8BAAYI,MAAMpM,EAAlB,IAAwB,EAAxB;AACD;AACDgM,4BAAYI,MAAMpM,EAAlB,EAAsB2F,IAAtB,CAA2B,EAAC,QAAQhB,IAAT,EAAe,SAASxD,KAAxB,EAA+B,MAAMnB,EAArC,EAA3B;AACD,eAxBD;AAyBD,aA1BD;AA2BAiE,yBAAa,EAAC,UAAU+H,WAAX,EAAwB,cAAcC,gBAAtC,EAAb;AACD;;;uCAEY7H,I,EAAM;AAAA;;AACjB8H,mBAAOC,IAAP,CAAY/H,IAAZ,EAAkBnD,OAAlB,CAA0B,UAACD,GAAD,EAAS;AACjC,kBAAMG,QAAQiD,KAAKpD,GAAL,EAAUoD,KAAKpD,GAAL,EAAUsD,MAAV,GAAmB,CAA7B,CAAd,CADiC,CACe;AAChD,kBAAInD,MAAM4C,IAAN,KAAe,aAAnB,EAAkC;AAChC,oBAAMuI,YAAY,OAAKC,YAAL,CAAkBpL,KAAlB,CAAlB;AACAmG,8BAAc3B,IAAd,CAAmB2G,SAAnB;AACA,uBAAK1B,YAAL,GAAoB,OAAK4B,UAAL,CAAgBlF,aAAhB,CAApB;AACD,eAJD,MAIO,IAAInG,MAAM4C,IAAN,KAAe,SAAnB,EAA8B;AACnC,uBAAK0I,YAAL,CAAkBtL,KAAlB;AACA;AACA;AACA;AACD,eALM,MAKA;AACLmB,wBAAQC,GAAR,CAAY,oBAAoBpB,MAAM4C,IAA1B,GAAiC,0CAA7C;AACD;AACF,aAdD;AAeD;;;uCAEY2I,S,EAAW;AACtB;AACA,gBAAMC,MAAM,KAAKC,sBAAL,CAA4BF,UAAUrB,gBAAtC,EAAwDqB,UAAUpB,iBAAlE,EAAqFoB,UAAUvL,KAA/F,EAAsGuL,UAAU1M,EAAhH,EAAoH0M,UAAU3I,IAA9H,CAAZ;AACA;AACA;AACD;;;yCAEc4I,G,EAAKxL,K,EAAOnB,E,EAAI+D,I,EAAM;AACnC,gBAAM8I,WAAW,EAAjB;AACAF,gBAAI1L,OAAJ,CAAY,UAACmL,KAAD,EAAW;AACrBS,uBAASlH,IAAT,CAAc,CAACyG,MAAM,CAAN,CAAD,EAAWA,MAAM,CAAN,CAAX,CAAd;AACD,aAFD;;AAIA,gBAAIU,mBAAJ;AACA3F,sBAAU9D,KAAV,CAAgBpC,OAAhB,CAAwB,UAACC,MAAD,EAASoC,KAAT,EAAmB;AACzC,kBAAInC,SAASD,MAAb,EAAqB;AACnB4L,6BAAaxJ,QAAQ,CAArB;AACD;AACF,aAJD;;AAMA,gBAAMV,QAAQuE,UAAUvE,KAAV,CAAgBkK,UAAhB,CAAd;;AAEA,gBAAMC,UAAUlH,OAAOqB,CAAP,CAAS2F,QAAT,CAAkBA,QAAlB,EAA4B;AAC1CjK,qBAAOA,KADmC;AAE1CoK,sBAAQ,CAFkC;AAG1CC,4BAAc,CAH4B;AAI1CjN,kBAAIA,EAJsC;AAK1C+D,oBAAMA;AALoC,aAA5B,EAMb4F,EANa,CAMV,OANU,EAMD,UAAUnG,CAAV,EAAa;AAC1BD,wBAAUzD,kBAAV,EAA8B0D,CAA9B;AACD,aARe,EAQbmG,EARa,CAQV,OARU,EAQD,KAAKuD,SARJ,EAQevD,EARf,CAQkB,OARlB,EAQ2B,KAAKwD,kBARhC,CAAhB;;AAUA3F,4BAAgB7B,IAAhB,CAAqBoH,OAArB;AACA,iBAAK9B,cAAL,GAAsB,KAAKmC,YAAL,CAAkB5F,eAAlB,CAAtB;;AAEA,iBAAK6F,mBAAL,CAAyBN,OAAzB,EAAkC5L,KAAlC;AACD;;;iDAEsBmM,Q,EAAUC,S,EAAWpM,K,EAAOnB,E,EAAI+D,I,EAAM;AAC3D,gBAAM4I,MAAM,KAAKa,SAAL,CAAeF,QAAf,EAAyBC,SAAzB,EAAoCpM,KAApC,EAA2CnB,EAA3C,EAA+C+D,IAA/C,CAAZ;AACA,mBAAO4I,GAAP;AACD;;;oCAESW,Q,EAAUC,S,EAAWpM,K,EAAOnB,E,EAAI+D,I,EAAM;AAAA;;AAC9C,gBAAM0J,WAAW,yDAAjB;AACA,gBAAMC,YAAY,6CAAlB;;AAEA7H,mBAAO8H,CAAP,CAASC,IAAT,CAAc;AACZjG,mBAAK8F,WAAW,MAAX,GAAoBH,QAApB,GAA+B,OAA/B,GAAyCC,SAAzC,GAAqDG,SAD9C;AAEZ3J,oBAAM,KAFM;AAGZ8J,wBAAU,MAHE;AAIZC,qBAAO,KAJK;AAKZC,uBAAS,iBAAC3J,IAAD,EAAU;AACjB,uBAAK4J,cAAL,CAAoB5J,KAAK6J,OAAL,CAAaC,WAAjC,EAA8C/M,KAA9C,EAAqDnB,EAArD,EAAyD+D,IAAzD;AACD,eAPW;AAQZoK,qBAAO,eAACA,MAAD,EAAW;AAChB7L,wBAAQC,GAAR,CAAY4L,MAAZ;AACD;AAVW,aAAd;AAYD;;;uCAEYzB,S,EAAW;AACtB,gBAAMzM,MAAMiD,aAAawJ,UAAUvL,KAAvB,CAAZ;AACA,gBAAMiN,WAAWhL,IAAIR,KAAJ,CAAU3C,GAAV,CAAjB;AACA,gBAAMoO,aAAajL,IAAIP,OAAJ,CAAY5C,GAAZ,CAAnB;AACA,gBAAMqO,UAAUlL,IAAIoB,KAAJ,CAAUvE,GAAV,CAAhB;AACA,gBAAMsE,aAAamI,UAAUnI,UAA7B;AACA,gBAAMvE,KAAK0M,UAAU1M,EAArB;AACA,gBAAM+D,OAAO2I,UAAU3I,IAAvB;;AAEAQ,uBAAWoB,IAAX,CAAgB,EAAC,QAAQ,KAAT,EAAgB,SAAS+G,UAAUvL,KAAnC,EAAhB;;AAEA,gBAAMoN,SAAS1I,OAAOqB,CAAP,CAASqH,MAAT,CAAgB,CAAC7B,UAAUrB,gBAAX,EAA6BqB,UAAUpB,iBAAvC,CAAhB,EAA2E,GAA3E,EAAgF;AAC7F1I,qBAAOwL,QADsF;AAE7FI,yBAAWJ,QAFkF;AAG7FK,2BAAa,GAHgF;AAI7FL,wBAAUA,QAJmF;AAK7FC,0BAAYA,UALiF;AAM7FC,uBAASA,OANoF;AAO7F/J,0BAAYA,UAPiF;AAQ7FvE,kBAAIA,EARyF;AAS7F+D,oBAAMA,IATuF;AAU7FuJ,wBAAUZ,UAAUrB,gBAVyE;AAW7FkC,yBAAWb,UAAUpB,iBAXwE;AAY7FrL,mBAAKyM,UAAUvL;AAZ8E,aAAhF,EAaZwI,EAbY,CAaT,OAbS,EAaA,UAAUnG,CAAV,EAAa;AAC1BD,wBAAUzD,kBAAV,EAA8B0D,CAA9B;AACD,aAfc,EAeZmG,EAfY,CAeT,OAfS,EAeA,KAAKuD,SAfL,EAegBvD,EAfhB,CAemB,OAfnB,EAe4B,KAAK+E,eAfjC,CAAf;;AAiBA,iBAAKC,iBAAL,CAAuBJ,MAAvB,EAA+B7B,UAAUvL,KAAzC,EAAgDkN,UAAhD;AACA,mBAAOE,MAAP;AACD;;;4CAEiB;AAChB;AACApO,qBAASC,cAAT,CAAwB,aAAxB,EAAuCoC,KAAvC,CAA6CC,OAA7C,GAAuD,OAAvD;;AAEA;AACAtC,qBAASC,cAAT,CAAwB,cAAxB,EAAwCoC,KAAxC,CAA8CC,OAA9C,GAAwD,MAAxD;;AAEA,gBAAMR,eAAe9B,SAAS+B,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDC,YAAxE;AACA,gBAAMC,cAAcjC,SAAS+B,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDG,WAAvE;;AAEA;AACA,gBAAIJ,gBAAgB,GAAhB,IAAuBA,gBAAgB,GAA3C,EAAgD;AAC9C;AACA9B,uBAASC,cAAT,CAAwB,kBAAxB,EAA4CoC,KAA5C,CAAkDC,OAAlD,GAA4D,OAA5D;AACD;AACF;;;+CAEoB;AACnB;AACAtC,qBAASC,cAAT,CAAwB,aAAxB,EAAuCoC,KAAvC,CAA6CC,OAA7C,GAAuD,MAAvD;;AAEA;AACAtC,qBAASC,cAAT,CAAwB,kBAAxB,EAA4CoC,KAA5C,CAAkDC,OAAlD,GAA4D,MAA5D;;AAEA,gBAAMR,eAAe9B,SAAS+B,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDC,YAAxE;AACA,gBAAMC,cAAcjC,SAAS+B,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDG,WAAvE;;AAEA;AACA,gBAAIJ,gBAAgB,GAAhB,IAAuBA,gBAAgB,GAA3C,EAAgD;AAC9C;AACA9B,uBAASC,cAAT,CAAwB,cAAxB,EAAwCoC,KAAxC,CAA8CC,OAA9C,GAAwD,OAAxD;AACD;AAEF;;;4CAEiBiE,M,EAAQvF,K,EAAO;AAC/B,gBAAMyN,QAAS,WAAWzN,KAA1B;AACAuF,mBAAOmI,SAAP,CAAiBD,KAAjB,EAAwB,EAAC,UAAU/I,OAAOqB,CAAP,CAASkF,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAX,EAAkC,aAAa,gBAA/C,EAAiE,eAAe,KAAKjE,IAAL,CAAUO,KAAV,CAAgBoG,YAAhG,EAAxB;;AAEApI,mBAAOiD,EAAP,CAAU,WAAV,EAAuB,SAASoF,WAAT,CAAqBC,GAArB,EAA0B;AAC/C;AACA;AACA,mBAAKC,SAAL;AACD,aAJD;;AAMA,gBAAI,CAAC,KAAK9G,IAAL,CAAUO,KAAV,CAAgBoG,YAArB,EAAmC;AACjCpI,qBAAOiD,EAAP,CAAU,UAAV,EAAsB,SAASuF,UAAT,GAAsB;AAC1CxI,uBAAOyI,UAAP;AACD,eAFD;AAGD;AACF;;;4CAEiBZ,M,EAAQtO,G,EAAKoO,U,EAAY;AACzC,gBAAMO,QAAQ,CAAC,UAAU3O,GAAV,GAAgB,IAAhB,GAAuBoO,UAAvB,GAAoC,GAArC,EAA0Ce,IAA1C,EAAd;AACAb,mBAAOM,SAAP,CAAiBD,KAAjB,EAAwB,EAAC,UAAU/I,OAAOqB,CAAP,CAASkF,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAX,EAAkC,aAAa,gBAA/C,EAAiE,eAAe,KAAKjE,IAAL,CAAUO,KAAV,CAAgBoG,YAAhG,EAAxB;;AAEAP,mBAAO5E,EAAP,CAAU,WAAV,EAAuB,SAASoF,WAAT,CAAqBC,GAArB,EAA0B;AAC/C;AACA;AACA,mBAAKC,SAAL;AACD,aAJD;;AAMA,gBAAI,CAAC,KAAK9G,IAAL,CAAUO,KAAV,CAAgBoG,YAArB,EAAmC;AACjCP,qBAAO5E,EAAP,CAAU,UAAV,EAAsB,SAASuF,UAAT,GAAsB;AAC1CX,uBAAOY,UAAP;AACD,eAFD;AAGD;AACF;;;8CAEmBtC,Q,EAAU1L,K,EAAO;AACnC,gBAAMyN,QAAQ,CAAC,qBAAqBzN,KAAtB,EAA6BiO,IAA7B,EAAd;AACAvC,qBAASgC,SAAT,CAAmBD,KAAnB,EAA0B,EAAC,UAAU/I,OAAOqB,CAAP,CAASkF,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAX,EAAkC,aAAa,gBAA/C,EAAiE,eAAe,KAAKjE,IAAL,CAAUO,KAAV,CAAgBoG,YAAhG,EAA1B;;AAEAjC,qBAASlD,EAAT,CAAY,WAAZ,EAAyB,SAASoF,WAAT,CAAqBC,GAArB,EAA0B;AACjD;AACA;AACA,mBAAKC,SAAL;AACD,aAJD;;AAMA,gBAAI,CAAC,KAAK9G,IAAL,CAAUO,KAAV,CAAgBoG,YAArB,EAAmC;AACjCjC,uBAASlD,EAAT,CAAY,UAAZ,EAAwB,SAASuF,UAAT,GAAsB;AAC5CrC,yBAASsC,UAAT;AACD,eAFD;AAGD;AACF;;;oCAES3L,C,EAAG;AACXiE,oCAAwBjE,CAAxB;AACD;;;mCAEQ;AACP,iBAAKqF,GAAL,CAASwG,cAAT;AACD;;;2CAEgB;AACf,iBAAKxG,GAAL,CAASS,KAAT,CAAe,CAACb,WAAW,KAAKN,IAAL,CAAUO,KAAV,CAAgBC,iBAA3B,CAAD,EAAgDF,WAAW,KAAKN,IAAL,CAAUO,KAAV,CAAgBE,kBAA3B,CAAhD,CAAf;AACA,iBAAKT,IAAL,CAAUmH,cAAV,GAA2B,KAA3B;AACD;;;yCAEc;AACb,iBAAKhJ,MAAL,CAAYiJ,UAAZ,CAAuB,KAAK1G,GAA5B;AACA,iBAAKvC,MAAL,GAAc,IAAd;AACD;;;qCAEUgC,O,EAAS;AAClB,mBAAOzC,OAAOqB,CAAP,CAASsI,UAAT,CAAoBlH,OAApB,EAA6BoB,KAA7B,CAAmC,KAAKb,GAAxC,CAAP;AACD;;;qCACU4G,O,EAAS;AAClB,mBAAO5J,OAAOqB,CAAP,CAASsI,UAAT,CAAoBC,OAApB,EAA6B/F,KAA7B,CAAmC,KAAKb,GAAxC,CAAP;AACD;;;uCAEY6G,S,EAAW;AACtB,mBAAO7J,OAAOqB,CAAP,CAASsI,UAAT,CAAoBE,SAApB,EAA+BhG,KAA/B,CAAqC,KAAKb,GAA1C,CAAP;AACD;;;0CAEe;AACd,iBAAKA,GAAL,CAAS8G,WAAT,CAAqB,KAAK/E,YAA1B;AACD;;;0CAEe;AACd,iBAAK/B,GAAL,CAAS8G,WAAT,CAAqB,KAAK5E,YAA1B;AACD;;;4CAEiB;AAChB,iBAAKlC,GAAL,CAAS8G,WAAT,CAAqB,KAAK1E,cAA1B;AACD;;;kCAEO2E,U,EAAY;AAClB,iBAAK/G,GAAL,CAASgH,OAAT,CAAiBzG,SAASwG,UAAT,EAAqB,EAArB,CAAjB;AACD;;;;;;yBApZkB1H,Q","file":"worldmap.js","sourcesContent":["import _ from 'lodash';\n\nimport Highcharts from './libs/highcharts';\n\n/* eslint-disable id-length, no-unused-vars */\nimport L from './libs/leaflet';\n/* eslint-disable id-length, no-unused-vars */\n\nconst AQI = {\n  'range': [0, 50, 100, 150, 200, 300, 500],\n  'meaning': ['Good', 'Moderate', 'Unhealthy for Sensitive Groups', 'Unhealthy', 'Very Unhealthy', 'Hazardous'],\n  'color': ['#009966', '#ffde33', '#ff9933', '#cc0033', '#660099', '#7e0023'],\n  'risks': ['Air quality is considered satisfactory, and air pollution poses little or no risk.', 'Air quality is acceptable; however, for some pollutants there may be a moderate health concern for a very small number of people who are unusually sensitive to air pollution.', 'Members of sensitive groups may experience health effects. The general public is not likely to be affected.', 'Everyone may begin to experience health effects; members of sensitive groups may experience more serious health effects.', 'Health alert: everyone may experience more serious health effects.', 'Health warnings of emergency conditions. The entire population is more likely to be affected.']\n};\n\nconst carsCount = {\n  'range': [0, 15, 30, 45, 70, 85, 100],\n  'color': ['#009966', '#ffde33', '#ff9933', '#cc0033', '#660099', '#7e0023']\n};\n\nlet providedPollutants;\n\nlet timeSeries = {};\n\nlet mapControl;\nlet mapZoom;\n\nlet globalCircles = [];\nlet globalMarkers = [];\nlet globalPolylines = [];\n\nlet currentTargetForChart = null;\nlet currentParameterForChart = 'aqi';\n\nconst tileServers = {\n  'CartoDB Positron': { url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png', attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>', subdomains: 'abcd'},\n  'CartoDB Dark': {url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png', attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>', subdomains: 'abcd'}\n};\nconst carMarker = window.L.icon({\n  iconUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/Map_marker.svg/2000px-Map_marker.svg.png',\n\n  iconSize: [25, 40], // size of the icon\n  // iconAnchor: [15, 82], // point of the icon which will correspond to marker's location\n  // popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor\n});\n\nexport default class WorldMap {\n  constructor(ctrl, mapContainer) {\n    this.ctrl = ctrl;\n    this.mapContainer = mapContainer;\n    this.createMap();\n    this.circles = [];\n  }\n\n  createMap() {\n    const mapCenter = window.L.latLng(parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude));\n    mapControl = this.map = window.L.map(this.mapContainer, {worldCopyJump: true, center: mapCenter, zoomControl: false, attributionControl: false})\n      .fitWorld()\n      .zoomIn(parseInt(this.ctrl.panel.initialZoom, 5));\n    this.map.panTo(mapCenter);\n    window.L.control.zoom({position: 'topright'}).addTo(this.map);\n\n    this.map.on('zoomstart', (e) => {\n      mapZoom = mapControl.getZoom();\n    });\n\n    providedPollutants = JSON.parse(this.ctrl.panel.pollutants);\n\n    this.map.on('click', (e) => {\n      document.getElementById('measuresTable').style.display = 'none';\n      document.getElementById('healthConcernsWrapper').style.display = 'none';\n      document.getElementById('dataChart').style.display = 'none';\n      document.getElementById('environmentTable').style.display = 'none';\n      document.getElementById('trafficTable').style.display = 'none';\n    });\n\n    const selectedTileServer = tileServers[this.ctrl.tileServer];\n    window.L.tileLayer(selectedTileServer.url, {\n      maxZoom: 18,\n      subdomains: selectedTileServer.subdomains,\n      reuseTiles: true,\n      detectRetina: true,\n      attribution: selectedTileServer.attribution\n    }).addTo(this.map, true);\n\n    const airParametersDropdown = document.getElementById('airParametersDropdown');\n\n    airParametersDropdown.addEventListener('change', function() {\n      currentParameterForChart = this.value;\n      drawChart(providedPollutants, currentTargetForChart);\n    });\n\n  }\n\n  filterEmptyAndZeroValues(data) {\n    return _.filter(data, (o) => { return !(this.ctrl.panel.hideEmpty && _.isNil(o.value)) && !(this.ctrl.panel.hideZero && o.value === 0); });\n  }\n\n  clearCircles() {\n    if (this.circlesLayer) {\n      this.circlesLayer.clearLayers();\n      this.removeCircles(this.circlesLayer);\n      globalCircles = [];\n    }\n  }\n  clearMarkers() {\n    if (this.markersLayer) {\n      this.markersLayer.clearLayers();\n      this.removeMarkers(this.markersLayer);\n      globalMarkers = [];\n    }\n  }\n\n  clearPolylines() {\n    if (this.polylinesLayer) {\n      this.polylinesLayer.clearLayers();\n      this.removePolylines(this.polylinesLayer);\n      globalPolylines = [];\n    }\n  }\n\n  dataTreatment(data) {\n    const finalData = {};\n    let auxData = {};\n\n    data.forEach((value) => {\n      if (!(finalData[value.id])) {\n        finalData[value.id] = [];\n      }\n      if (value.type === 'environment'){\n          finalData[value.id].push({'id': value.id, 'locationLatitude': value.locationLatitude, 'locationLongitude': value.locationLongitude, 'time': value.time, 'type': value.type, 'value': value.value,'pollutants': value.pollutants});\n      }\n      else {\n          finalData[value.id].push({'id': value.id, 'locationLatitude': value.locationLatitude, 'locationLongitude': value.locationLongitude, 'time': value.time, 'type': value.type, 'value': value.value});\n      }\n    });\n\n    return finalData;\n  }\n\n  drawPoints() {\n    this.hideAllTables();\n\n    const data = this.filterEmptyAndZeroValues(this.ctrl.data);\n    this.clearCircles();\n    this.clearMarkers();\n    this.clearPolylines();\n\n    timeSeries = {};\n\n    const treatedData = this.dataTreatment(data);\n\n    this.createTimeSeries(treatedData);\n    this.createPoints(treatedData);\n\n    // Id sensor selected and new data arrives the chart will be updated\n    if (currentTargetForChart !== null){\n      drawChart(providedPollutants, currentTargetForChart);\n    }\n  }\n\n  hideAllTables() {\n    const mapDivHeight = document.getElementsByClassName('mapcontainer')[0].offsetHeight;\n    const mapDivWidth = document.getElementsByClassName('mapcontainer')[0].offsetWidth;\n\n    // Remove the map secundary data (tables) when the map div is too small\n    if (mapDivHeight <= 405 || mapDivHeight <= 860) {\n      document.getElementById('measuresTable').style.display = 'none';\n      document.getElementById('healthConcernsWrapper').style.display = 'none';\n      document.getElementById('environmentTable').style.display = 'none';\n      document.getElementById('trafficTable').style.display = 'none';\n    }\n  }\n\n  createTimeSeries(data) {\n    timeSeries = {};\n    const valueValues = {};\n    const values = [];\n    const pollutantsValues = [];\n\n    Object.keys(data).forEach((key) => {\n      data[key].forEach((point) => {\n        const id = point.id;\n        const time = point.time;\n        let pollutants = '';\n\n        if (point.type === 'environment') {\n          pollutants = point.pollutants;\n        }\n        const value = point.value;\n        if (point.type === 'environment') {\n          const pollutantsTemp = {};\n\n          pollutants.forEach((pollutant) => {\n            if (!(pollutantsValues[pollutant.name])) {\n              pollutantsValues[pollutant.name] = [];\n            }\n            pollutantsValues[pollutant.name].push({'time': time, 'value': pollutant.value, 'id': id});\n          });\n        }\n\n        if (!(valueValues[point.id])) {\n          valueValues[point.id] = [];\n        }\n        valueValues[point.id].push({'time': time, 'value': value, 'id': id});\n      });\n    });\n    timeSeries = {'values': valueValues, 'pollutants': pollutantsValues};\n  }\n\n  createPoints(data) {\n    Object.keys(data).forEach((key) => {\n      const value = data[key][data[key].length - 1 ]; // Use the last data for each sensor to create on map -> avoid repeated markers on map and use just the last measurement (the one needed to show on marker)\n      if (value.type === 'environment') {\n        const newCircle = this.createCircle(value);\n        globalCircles.push(newCircle);\n        this.circlesLayer = this.addCircles(globalCircles);\n      } else if (value.type === 'traffic') {\n        this.createMarker(value);\n        // const newMarker = this.createMarker(dataPoint);\n        // globalMarkers.push(newMarker);\n        // this.markersLayer = this.addMarkers(globalMarkers);\n      } else {\n        console.log('Map point type ' + value.type + ' invalid. Must be environment or traffic');\n      }\n    });\n  }\n\n  createMarker(dataPoint) {\n    // const marker = window.L.marker([dataPoint.locationLatitude, dataPoint.locationLongitude]);\n    const way = this.calculatePointPolyline(dataPoint.locationLatitude, dataPoint.locationLongitude, dataPoint.value, dataPoint.id, dataPoint.type);\n    // this.createPopupMarker(marker, dataPoint.value);\n    // return marker;\n  }\n\n  createPolyline(way, value, id, type) {\n    const polyline = [];\n    way.forEach((point) => {\n      polyline.push([point[1], point[0]]);\n    });\n\n    let colorIndex;\n    carsCount.range.forEach((_value, index) => {\n      if (value >= _value) {\n        colorIndex = index - 1;\n      }\n    });\n\n    const color = carsCount.color[colorIndex];\n\n    const polygon = window.L.polyline(polyline, {\n      color: color,\n      weight: 5,\n      smoothFactor: 5,\n      id: id,\n      type: type\n    }).on('click', function (e) {\n      drawChart(providedPollutants, e);\n    }).on('click', this.setTarget).on('click', this.removePollDropdown);\n\n    globalPolylines.push(polygon);\n    this.polylinesLayer = this.addPolylines(globalPolylines);\n\n    this.createPopupPolyline(polygon, value);\n  }\n\n  calculatePointPolyline(latitude, longitude, value, id, type) {\n    const way = this.nominatim(latitude, longitude, value, id, type);\n    return way;\n  }\n\n  nominatim(latitude, longitude, value, id, type) {\n    const urlStart = 'http://nominatim.openstreetmap.org/reverse?format=json&';\n    const urlFinish = '&zoom=16&addressdetails=1&polygon_geojson=1';\n\n    window.$.ajax({\n      url: urlStart + 'lat=' + latitude + '&lon=' + longitude + urlFinish,\n      type: 'GET',\n      dataType: 'json',\n      cache: false,\n      success: (data) => {\n        this.createPolyline(data.geojson.coordinates, value, id, type);\n      },\n      error: (error) => {\n        console.log(error);\n      }\n    });\n  }\n\n  createCircle(dataPoint) {\n    const aqi = calculateAQI(dataPoint.value);\n    const aqiColor = AQI.color[aqi];\n    const aqiMeaning = AQI.meaning[aqi];\n    const aqiRisk = AQI.risks[aqi];\n    const pollutants = dataPoint.pollutants;\n    const id = dataPoint.id;\n    const type = dataPoint.type;\n\n    pollutants.push({'name': 'aqi', 'value': dataPoint.value});\n\n    const circle = window.L.circle([dataPoint.locationLatitude, dataPoint.locationLongitude], 200, {\n      color: aqiColor,\n      fillColor: aqiColor,\n      fillOpacity: 0.5,\n      aqiColor: aqiColor,\n      aqiMeaning: aqiMeaning,\n      aqiRisk: aqiRisk,\n      pollutants: pollutants,\n      id: id,\n      type: type,\n      latitude: dataPoint.locationLatitude,\n      longitude: dataPoint.locationLongitude,\n      aqi: dataPoint.value\n    }).on('click', function (e) {\n      drawChart(providedPollutants, e);\n    }).on('click', this.setTarget).on('click', this.addPollDropdown);\n\n    this.createPopupCircle(circle, dataPoint.value, aqiMeaning);\n    return circle;\n  }\n\n  addPollDropdown() {\n    // Add pollutants chart dropdown \n    document.getElementById('dataDetails').style.display = 'block';\n\n    // Remove traffic colors table\n    document.getElementById('trafficTable').style.display = 'none';\n\n    const mapDivHeight = document.getElementsByClassName('mapcontainer')[0].offsetHeight;\n    const mapDivWidth = document.getElementsByClassName('mapcontainer')[0].offsetWidth;\n    \n    // Only show the map secundary data (tables) when the map div is not too small\n    if (mapDivHeight >= 405 && mapDivHeight >= 860) {\n      // Add environment colors table\n      document.getElementById('environmentTable').style.display = 'block';\n    }\n  }\n\n  removePollDropdown() {\n    // Remove pollutants chart dropdown\n    document.getElementById('dataDetails').style.display = 'none';\n\n    // Remove environmentcolors table\n    document.getElementById('environmentTable').style.display = 'none';\n\n    const mapDivHeight = document.getElementsByClassName('mapcontainer')[0].offsetHeight;\n    const mapDivWidth = document.getElementsByClassName('mapcontainer')[0].offsetWidth;\n\n    // Only show the map secundary data (tables) when the map div is not too small\n    if (mapDivHeight >= 405 && mapDivHeight >= 860) {\n      // Add traffic colors table\n      document.getElementById('trafficTable').style.display = 'block';\n    }\n    \n  }\n\n  createPopupMarker(marker, value) {\n    const label = ('Cars: ' + value);\n    marker.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    marker.on('mouseover', function onMouseOver(evt) {\n      // const layer = evt.target;\n      // layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      marker.on('mouseout', function onMouseOut() {\n        marker.closePopup();\n      });\n    }\n  }\n\n  createPopupCircle(circle, aqi, aqiMeaning) {\n    const label = ('AQI: ' + aqi + ' (' + aqiMeaning + ')').trim();\n    circle.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    circle.on('mouseover', function onMouseOver(evt) {\n      // const layer = evt.target;\n      // layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      circle.on('mouseout', function onMouseOut() {\n        circle.closePopup();\n      });\n    }\n  }\n\n  createPopupPolyline(polyline, value) {\n    const label = ('Number of cars: ' + value).trim();\n    polyline.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    polyline.on('mouseover', function onMouseOver(evt) {\n      // const layer = evt.target;\n      // layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      polyline.on('mouseout', function onMouseOut() {\n        polyline.closePopup();\n      });\n    }\n  }\n\n  setTarget(e) {\n    currentTargetForChart = e;\n  }\n\n  resize() {\n    this.map.invalidateSize();\n  }\n\n  panToMapCenter() {\n    this.map.panTo([parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude)]);\n    this.ctrl.mapCenterMoved = false;\n  }\n\n  removeLegend() {\n    this.legend.removeFrom(this.map);\n    this.legend = null;\n  }\n\n  addCircles(circles) {\n    return window.L.layerGroup(circles).addTo(this.map);\n  }\n  addMarkers(markers) {\n    return window.L.layerGroup(markers).addTo(this.map);\n  }\n\n  addPolylines(polylines) {\n    return window.L.layerGroup(polylines).addTo(this.map);\n  }\n\n  removeCircles() {\n    this.map.removeLayer(this.circlesLayer);\n  }\n\n  removeMarkers() {\n    this.map.removeLayer(this.markersLayer);\n  }\n\n  removePolylines() {\n    this.map.removeLayer(this.polylinesLayer);\n  }\n\n  setZoom(zoomFactor) {\n    this.map.setZoom(parseInt(zoomFactor, 10));\n  }\n\n}\n\nfunction showPollutants(providedPollutants, allPollutants, id, aqi) {\n\n  const measuresTable = document.getElementById('measures-table');\n\n  while (measuresTable.rows[0]) measuresTable.deleteRow(0);\n\n  // Remove air paramters from dropdown\n  var el = document.getElementById('airParametersDropdown');\n  while ( el.firstChild ) {\n    el.removeChild( el.firstChild )\n  }\n\n  // ---\n\n  // Add default pollutant option to dropdown\n  const defaultPollutantOption = document.createElement('option');\n  const html = '<option value=\"0\" selected=\"selected\">Air Parameter</option>';\n\n  defaultPollutantOption.innerHTML = html;\n  document.getElementById('airParametersDropdown').appendChild(defaultPollutantOption);\n\n  // -----\n\n\n  const pollutantsToShow = {};\n  for (const key in allPollutants) {\n    allPollutants[key].forEach((_value) => {\n      if (_value.id === id) {\n        if (!(pollutantsToShow[key])){\n          pollutantsToShow[key] = 0;\n        }\n        pollutantsToShow[key] = _value.value;\n      }\n    });\n  }\n\n  pollutantsToShow['aqi'] = aqi;\n\n  for (const pollutant in pollutantsToShow){\n    const row = measuresTable.insertRow(0);\n    row.className = 'measure';\n\n    const innerCell0 = providedPollutants[pollutant].name;\n    const innerCell1 = pollutantsToShow[pollutant] + ' ' + providedPollutants[pollutant].unit;\n\n    const cell0 = row.insertCell(0);\n    const cell1 = row.insertCell(1);\n\n\n    cell0.innerHTML = innerCell0;\n    cell1.innerHTML = innerCell1;\n    cell0.className = 'cell';\n    cell1.className = 'cell';\n\n    // Add Pollutants to Chart Dropdown\n    const newPollutant = document.createElement('option');\n\n    newPollutant.id = 'pollutantOption';\n    newPollutant.value = pollutant.toUpperCase();\n\n    newPollutant.innerHTML = providedPollutants[pollutant].name;\n \n    document.getElementById('airParametersDropdown').appendChild(newPollutant);\n\n    // ----\n  };\n  const mapDivHeight = document.getElementsByClassName('mapcontainer')[0].offsetHeight;\n  const mapDivWidth = document.getElementsByClassName('mapcontainer')[0].offsetWidth;\n  console.log(mapDivHeight, mapDivWidth);\n  // Only show the map secundary data (tables) when the map div is not too small\n  if (mapDivHeight >= 405 && mapDivWidth >= 860) {\n    document.getElementById('environmentTable').style.display = 'block';\n    document.getElementById('measuresTable').style.display = 'block';\n  }\n}\n\nfunction showHealthConcerns(providedPollutants, risk, color, meaning) {\n  const healthConcernsWrapper = document.getElementById('healthConcernsWrapper');\n  const healthConcerns = document.getElementById('healthConcerns');\n  const healthRisk = document.getElementById('healthRisk');\n\n  const mapDivHeight = document.getElementsByClassName('mapcontainer')[0].offsetHeight;\n  const mapDivWidth = document.getElementsByClassName('mapcontainer')[0].offsetWidth;\n\n  // Only show the map secundary data (tables) when the map div is not too small\n  if (mapDivHeight >= 405 && mapDivWidth >= 860) {\n    healthConcernsWrapper.style.display = 'block';\n    healthConcerns.style.backgroundColor = color;\n    healthRisk.innerHTML = risk;\n  }\n}\n\nfunction calculateAQI(aqi) {\n  let aqiIndex;\n  AQI.range.forEach((value, index) => {\n    if (aqi > value && aqi <= AQI.range[index + 1]) {\n      aqiIndex = index;\n    }\n  });\n  return aqiIndex;\n}\n\nfunction drawChart(providedPollutants, e) {\n  const currentParameter = currentParameterForChart.toLowerCase();\n\n  const chart = document.getElementById('dataChart');\n  chart.style.display = 'block';\n\n  const id = e.target.options.id;\n  const type = e.target.options.type;\n\n  const values = timeSeries.values[id];\n  let title = '';\n  let parameterUnit = '';\n  let data = [];\n\n  const lastValueMeasure = values[values.length - 1].value;\n\n  const aqiIndex = calculateAQI(lastValueMeasure);\n\n  // Show Pollutants Legend (MAP)\n  if (type === 'environment') {\n    const allPollutants = timeSeries.pollutants;\n    showPollutants(providedPollutants, allPollutants, id, lastValueMeasure);\n    showHealthConcerns(providedPollutants, AQI.risks[aqiIndex], AQI.color[aqiIndex], AQI.meaning[aqiIndex]);\n  } else { // Hide legend\n    const mapDivHeight = document.getElementsByClassName('mapcontainer')[0].offsetHeight;\n    const mapDivWidth = document.getElementsByClassName('mapcontainer')[0].offsetWidth;\n\n    if (mapDivHeight >= 405 && mapDivWidth >= 860) {\n      document.getElementById('trafficTable').style.display = 'block';\n    }\n    document.getElementById('healthConcernsWrapper').style.display = 'none';\n    document.getElementById('measuresTable').style.display = 'none';\n\n  }\n  // ------\n\n  parameterUnit = providedPollutants[currentParameter].unit;\n\n  title = providedPollutants[currentParameter].name + ' - Sensor ' + id;\n\n  if (type === 'environment' && currentParameter !== 'aqi') {\n\n    const parameterChoice = timeSeries.pollutants[currentParameter];\n    \n    parameterChoice.forEach((sensor) => {\n      if (sensor.id === id) {\n        const time = new Date(sensor.time);\n\n        const day = time.getDate();\n        const month = time.getMonth();\n        const year = time.getFullYear();\n        const hour = time.getHours() - 1;\n        const minutes = time.getMinutes();\n        const seconds = time.getSeconds();\n        const milliseconds = time.getMilliseconds();\n\n        data.push([Date.UTC(year, month, day, hour, minutes, seconds, milliseconds), sensor.value]);\n      }\n    });\n  }\n  if ((type === 'environment' && currentParameter === 'aqi')  || type === 'traffic') {\n\n    if(type === 'traffic') {\n      title = 'Cars Count - Sensor ' + id;\n      parameterUnit = 'Cars'\n    }\n\n    values.forEach((value) => {\n      const time = new Date(value.time);\n\n      const day = time.getDate();\n      const month = time.getMonth();\n      const year = time.getFullYear();\n      const hour = time.getHours() - 1;\n      const minutes = time.getMinutes();\n      const seconds = time.getSeconds();\n      const milliseconds = time.getMilliseconds();\n\n      data.push([Date.UTC(year, month, day, hour, minutes, seconds, milliseconds), value.value]);\n    });\n  }\n\n  window.Highcharts.chart('graphContainer', {\n      chart: {\n          zoomType: 'x',\n          backgroundColor: '#1f1d1d'\n      },\n      title: {\n          text: title\n      },\n      subtitle: {\n          text: document.ontouchstart === undefined ? '' : ''\n      },\n      xAxis: {\n          type: 'datetime'\n      },\n      yAxis: {\n          title: {\n              text: parameterUnit\n          }\n      },\n      legend: {\n          enabled: false\n      },\n      plotOptions: {\n          area: {\n              // fillColor: {\n              //   linearGradient: {\n              //     x1: 0,\n              //     y1: 0,\n              //     x2: 0,\n              //     y2: 1\n                // }\n                // stops: [\n                //     [0, '#CCCCCC'],\n                //     [1, '#FFFFFF']\n                // ]\n              // },\n              marker: {\n                  radius: 4\n              },\n              lineWidth: 3,\n              states: {\n                  hover: {\n                      lineWidth: 4\n                  }\n              },\n              threshold: null\n          }\n      },\n\n      series: [{\n          type: 'area',\n          name: title,\n          color: '#CCCCCC',\n          data: data\n      }]\n  });\n}\n"]}