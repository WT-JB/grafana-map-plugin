{"version":3,"sources":["../src/worldmap.js"],"names":["showPollutants","providedPollutants","allPollutants","id","aqi","measuresTable","document","getElementById","rows","deleteRow","el","firstChild","removeChild","defaultPollutantOption","createElement","html","innerHTML","appendChild","pollutantsToShow","key","forEach","_value","value","pollutant","row","insertRow","className","innerCell0","name","innerCell1","unit","cell0","insertCell","cell1","newPollutant","toUpperCase","mapDivHeight","getElementsByClassName","offsetHeight","mapDivWidth","offsetWidth","style","display","showHealthConcerns","risk","color","meaning","healthConcernsWrapper","healthConcerns","healthRisk","backgroundColor","calculateAQI","aqiIndex","AQI","range","index","drawChart","e","redrawChart","currentParameter","currentParameterForChart","toLowerCase","chart","target","options","type","values","timeSeries","title","parameterUnit","lastValueMeasure","length","pollutants","risks","chartData","parameterChoice","sensor","time","Date","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","push","UTC","window","Highcharts","theme","colors","linearGradient","x1","y1","x2","y2","stops","fontFamily","plotBorderColor","fontSize","subtitle","textTransform","xAxis","gridLineColor","labels","lineColor","minorGridLineColor","tickColor","yAxis","tickWidth","tooltip","plotOptions","series","dataLabels","marker","boxplot","fillColor","candlestick","errorbar","legend","itemStyle","itemHoverStyle","itemHiddenStyle","credits","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","buttonOptions","symbolStroke","fill","rangeSelector","buttonTheme","stroke","states","hover","select","inputBoxBorderColor","inputStyle","labelStyle","navigator","handles","borderColor","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","legendBackgroundColor","background2","dataLabelsColor","textColor","contrastTextColor","maskColor","setOptions","stockChart","zoomType","events","load","chartSeries","text","ontouchstart","undefined","enabled","buttons","count","inputEnabled","selected","data","_","L","carsCount","mapControl","mapZoom","globalCircles","globalMarkers","globalPolylines","circlesLayer","polylinesLayer","currentTargetForChart","tileServers","url","attribution","subdomains","carMarker","icon","iconUrl","iconSize","WorldMap","ctrl","mapContainer","createMap","circles","layerGroup","mapCenter","latLng","parseFloat","panel","mapCenterLatitude","mapCenterLongitude","map","worldCopyJump","center","zoomControl","attributionControl","layers","fitWorld","setZoom","initialZoom","_initPathRoot","_updatePathViewport","panTo","control","zoom","position","addTo","baseMaps","overlayMaps","on","getZoom","selectedTileServer","tileServer","tileLayer","maxZoom","reuseTiles","detectRetina","airParametersDropdown","addEventListener","filter","o","hideEmpty","isNil","hideZero","clearLayers","markersLayer","removeMarkers","finalData","auxData","locationLatitude","locationLongitude","JSON","parse","error","Error","hideAllTables","filterEmptyAndZeroValues","clearCircles","clearPolylines","treatedData","dataTreatment","createTimeSeries","createPoints","targetType","targetId","lastMeasure","lastTime","timeEnvironment","val","timeTraffic","chartLastDisplayedValue","y","chartLastDisplayedTime","x","chartLastDisplayedId","split","parseInt","addPoint","console","log","valueValues","pollutantsValues","Object","keys","point","pollutantsTemp","newCircle","createCircle","addLayer","createMarker","dataPoint","way","calculatePointPolyline","street_name","polyline","colorIndex","polygon","weight","smoothFactor","setTarget","removePollDropdown","createPopupPolyline","latitude","longitude","nominatim","urlStart","urlFinish","$","ajax","dataType","cache","success","address","road","city","country","osm_id","osm","wayCoordinates","nodesAux","nodes","getElementsByTagName","nds","i","nodeId","attributes","lat","lon","lng","nd","ref","createPolyline","aqiColor","aqiMeaning","aqiRisk","circle","fillOpacity","addPollDropdown","createPopupCircle","label","bindPopup","stickyLabels","onMouseOver","evt","openPopup","onMouseOut","closePopup","trim","invalidateSize","mapCenterMoved","removeFrom","markers","polylines","removeLayer","zoomFactor"],"mappings":"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","file":"worldmap.js","sourcesContent":["import _ from 'lodash';\n\n// import Highcharts from './libs/highcharts';\nimport Highcharts from './libs/highstock';\n\n/* eslint-disable id-length, no-unused-vars */\nimport L from './libs/leaflet';\n/* eslint-disable id-length, no-unused-vars */\n\nconst AQI = {\n  'range': [0, 50, 100, 150, 200, 300, 500],\n  'meaning': ['Good', 'Moderate', 'Unhealthy for Sensitive Groups', 'Unhealthy', 'Very Unhealthy', 'Hazardous'],\n  'color': ['#00e400', '#ffff00', '#ff7e00', '#ff0000', '#8f3f97', '#7e0023'],\n  'risks': ['Air quality is considered satisfactory, and air pollution poses little or no risk.', 'Air quality is acceptable; however, for some pollutants there may be a moderate health concern for a very small number of people who are unusually sensitive to air pollution.', 'Members of sensitive groups may experience health effects. The general public is not likely to be affected.', 'Everyone may begin to experience health effects; members of sensitive groups may experience more serious health effects.', 'Health alert: everyone may experience more serious health effects.', 'Health warnings of emergency conditions. The entire population is more likely to be affected.']\n};\n\nconst carsCount = {\n  'range': [0, 15, 30, 45, 70, 85, 100],\n  'color': ['#00e400', '#ffff00', '#ff7e00', '#ff0000', '#8f3f97', '#7e0023']\n};\n\nlet providedPollutants;\n\nlet timeSeries = {};\nlet chartData = [];\nlet chartSeries;\n\nlet mapControl;\nlet mapZoom;\n\nlet globalCircles = [];\nlet globalMarkers = [];\nlet globalPolylines = [];\n\nlet circlesLayer;\nlet polylinesLayer;\n\nlet currentTargetForChart = null;\nlet currentParameterForChart = 'aqi';\n\nconst tileServers = {\n  'CartoDB Positron': { url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png', attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>', subdomains: 'abcd'},\n  'CartoDB Dark': {url: 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png', attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>', subdomains: 'abcd'}\n};\nconst carMarker = window.L.icon({\n  iconUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/Map_marker.svg/2000px-Map_marker.svg.png',\n\n  iconSize: [25, 40], // size of the icon\n  // iconAnchor: [15, 82], // point of the icon which will correspond to marker's location\n  // popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor\n});\n\nexport default class WorldMap {\n  constructor(ctrl, mapContainer) {\n    this.ctrl = ctrl;\n    this.mapContainer = mapContainer;\n    this.createMap();\n    this.circles = [];\n  }\n\n  createMap() {\n    circlesLayer = window.L.layerGroup();\n    polylinesLayer = window.L.layerGroup();\n\n    const mapCenter = window.L.latLng(parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude));\n    mapControl = this.map = window.L.map(this.mapContainer, {worldCopyJump: true, center: mapCenter, zoomControl: false, attributionControl: false, layers: [polylinesLayer, circlesLayer]})\n      .fitWorld()\n      // .zoomIn(parseInt(this.ctrl.panel.initialZoom, 5));\n    this.map.setZoom(this.ctrl.panel.initialZoom);\n    this.map._initPathRoot();\n    this.map._updatePathViewport();\n\n    this.map.panTo(mapCenter);\n    window.L.control.zoom({position: 'topright'}).addTo(this.map);\n\n    circlesLayer.addTo(mapControl);\n    polylinesLayer.addTo(mapControl);\n\n    var baseMaps = {\n    };\n\n    var overlayMaps = {\n      \"Environment Data\": circlesLayer,\n      \"Traffic Data\": polylinesLayer\n    };\n\n    window.L.control.layers(baseMaps, overlayMaps).addTo(mapControl);\n\n    this.map.on('zoomstart', (e) => {\n      mapZoom = mapControl.getZoom();\n    });\n\n    this.map.on('click', (e) => {\n      document.getElementById('measuresTable').style.display = 'none';\n      document.getElementById('healthConcernsWrapper').style.display = 'none';\n      document.getElementById('dataChart').style.display = 'none';\n      document.getElementById('environmentTable').style.display = 'none';\n      document.getElementById('trafficTable').style.display = 'none';\n    });\n\n    const selectedTileServer = tileServers[this.ctrl.tileServer];\n    window.L.tileLayer(selectedTileServer.url, {\n      maxZoom: 18,\n      subdomains: selectedTileServer.subdomains,\n      reuseTiles: true,\n      detectRetina: true,\n      attribution: selectedTileServer.attribution\n    }).addTo(this.map, true);\n\n    const airParametersDropdown = document.getElementById('airParametersDropdown');\n\n    airParametersDropdown.addEventListener('change', function() {\n      currentParameterForChart = this.value;\n      drawChart(providedPollutants, currentTargetForChart, 1);\n    });\n\n  }\n\n  filterEmptyAndZeroValues(data) {\n    return _.filter(data, (o) => { return !(this.ctrl.panel.hideEmpty && _.isNil(o.value)) && !(this.ctrl.panel.hideZero && o.value === 0); });\n  }\n\n  clearCircles() {\n    circlesLayer.clearLayers();\n    // if (circlesLayer) {\n    //   circlesLayer.clearLayers();\n    //   this.removeCircles(circlesLayer);\n    //   globalCircles = [];\n    // }\n  }\n  clearMarkers() {\n    if (this.markersLayer) {\n      this.markersLayer.clearLayers();\n      this.removeMarkers(this.markersLayer);\n      globalMarkers = [];\n    }\n  }\n\n  clearPolylines() {\n    polylinesLayer.clearLayers();\n    // polylinesLayer.layers.forEach((layer) => {\n    //   console.log(layer);\n    // });\n    // if (polylinesLayer) {\n    //   polylinesLayer.clearLayers();\n    //   this.removePolylines(polylinesLayer);\n    //   globalPolylines = [];\n    // }\n  }\n\n  dataTreatment(data) {\n    const finalData = {};\n    let auxData = {};\n\n    data.forEach((value) => {\n      if (!(finalData[value.id])) {\n        finalData[value.id] = [];\n      }\n      if (value.type === 'environment'){\n          finalData[value.id].push({'id': value.id, 'locationLatitude': value.locationLatitude, 'locationLongitude': value.locationLongitude, 'time': value.time, 'type': value.type, 'value': value.value,'pollutants': value.pollutants});\n      }\n      else {\n          finalData[value.id].push({'id': value.id, 'locationLatitude': value.locationLatitude, 'locationLongitude': value.locationLongitude, 'time': value.time, 'type': value.type, 'value': value.value});\n      }\n    });\n\n    return finalData;\n  }\n\n  drawPoints() {\n\n    try{\n      providedPollutants = JSON.parse(this.ctrl.panel.pollutants);\n    }catch(error){\n      throw new Error('Please insert a valid JSON in the Available Pollutants field');\n    }\n\n    this.hideAllTables();\n\n    const data = this.filterEmptyAndZeroValues(this.ctrl.data);\n    this.clearCircles();\n    // this.clearMarkers();\n    this.clearPolylines();\n\n    timeSeries = {};\n\n    const treatedData = this.dataTreatment(data);\n\n    this.createTimeSeries(treatedData);\n    this.createPoints(treatedData);\n\n    // Id sensor selected and new data arrives the chart will be updated (no redraw)\n    if (currentTargetForChart !== null){\n      drawChart(providedPollutants, currentTargetForChart, 0); // call drawChart but redraw the chart just update information related\n\n      const targetType = currentTargetForChart.target.options.type;\n      const targetId = currentTargetForChart.target.options.id;\n      const currentParameter = currentParameterForChart.toLowerCase();\n      let lastMeasure;\n      let lastTime;\n\n      if (targetType === 'environment') {\n        let timeEnvironment;\n        if (currentParameter !== 'aqi'){\n          timeEnvironment = timeSeries.pollutants[currentParameter];\n          timeEnvironment.forEach((val) => {\n            if (val.id === targetId){\n              lastTime = val.time;\n              lastMeasure = val.value;\n            } \n          });\n        }else {\n          timeEnvironment = timeSeries.values[targetId];\n          lastMeasure = timeEnvironment[timeEnvironment.length - 1].value;\n          lastTime = timeEnvironment[timeEnvironment.length - 1].time\n        }\n      }\n      if (targetType === 'traffic') {\n        const timeTraffic = timeSeries.values[targetId];\n        lastMeasure = timeTraffic[timeTraffic.length - 1].value;\n        lastTime = timeTraffic[timeTraffic.length - 1].time\n      }\n\n      const time = new Date(lastTime);\n\n      const day = time.getDate();\n      const month = time.getMonth();\n      const year = time.getFullYear();\n      const hour = time.getHours() - 1;\n      const minutes = time.getMinutes();\n      const seconds = time.getSeconds();\n      const milliseconds = time.getMilliseconds();\n\n      try{\n        const chartLastDisplayedValue = chartSeries.data[chartSeries.data.length - 1].y;\n        const chartLastDisplayedTime = chartSeries.data[chartSeries.data.length - 1].x;\n        let chartLastDisplayedId = chartSeries.name.split(' ');\n        chartLastDisplayedId = parseInt(chartLastDisplayedId[chartLastDisplayedId.length - 1]);\n      \n\n        if (!(lastTime === chartLastDisplayedTime && lastMeasure === chartLastDisplayedValue && targetId === chartLastDisplayedId)){\n          chartSeries.addPoint([Date.UTC(year, month, day, hour, minutes, seconds, milliseconds), lastMeasure], true, true);\n        }\n      }catch(error){\n        console.log(\"Whoaa! Something went wrong... Probably there is no recent data for the selected device. Here you have the the error:\");\n        console.log(error);\n      }\n    }\n  }\n\n  hideAllTables() {\n    const mapDivHeight = document.getElementsByClassName('mapcontainer')[0].offsetHeight;\n    const mapDivWidth = document.getElementsByClassName('mapcontainer')[0].offsetWidth;\n\n    // Remove the map secundary data (tables) when the map div is too small\n    if (mapDivHeight <= 405 || mapDivHeight <= 860) {\n      document.getElementById('measuresTable').style.display = 'none';\n      document.getElementById('healthConcernsWrapper').style.display = 'none';\n      document.getElementById('environmentTable').style.display = 'none';\n      document.getElementById('trafficTable').style.display = 'none';\n    }\n  }\n\n  createTimeSeries(data) {\n    timeSeries = {};\n    const valueValues = {};\n    const values = [];\n    const pollutantsValues = [];\n\n    Object.keys(data).forEach((key) => {\n      data[key].forEach((point) => {\n        const id = point.id;\n        const time = point.time;\n        let pollutants = '';\n\n        if (point.type === 'environment') {\n          pollutants = point.pollutants;\n        }\n        const value = point.value;\n        if (point.type === 'environment') {\n          const pollutantsTemp = {};\n\n          pollutants.forEach((pollutant) => {\n            if (!(pollutantsValues[pollutant.name])) {\n              pollutantsValues[pollutant.name] = [];\n            }\n            pollutantsValues[pollutant.name].push({'time': time, 'value': pollutant.value, 'id': id});\n          });\n        }\n\n        if (!(valueValues[point.id])) {\n          valueValues[point.id] = [];\n        }\n        valueValues[point.id].push({'time': time, 'value': value, 'id': id});\n      });\n    });\n    timeSeries = {'values': valueValues, 'pollutants': pollutantsValues};\n  }\n\n  createPoints(data) {\n    Object.keys(data).forEach((key) => {\n      const value = data[key][data[key].length - 1 ]; // Use the last data for each sensor to create on map -> avoid repeated markers on map and use just the last measurement (the one needed to show on marker)\n      if (value.type === 'environment') {\n        const newCircle = this.createCircle(value);\n        circlesLayer.addLayer(newCircle);\n        // globalCircles.push(newCircle);\n        // circlesLayer = this.addCircles(globalCircles);\n      } else if (value.type === 'traffic') {\n        this.createMarker(value);\n        // const newMarker = this.createMarker(dataPoint);\n        // globalMarkers.push(newMarker);\n        // this.markersLayer = this.addMarkers(globalMarkers);\n      } else {\n        console.log('Map point type ' + value.type + ' invalid. Must be environment or traffic');\n      }\n    });\n    // mapControl.removeLayer(circlesLayer);\n\n    // setTimeout(function(){\n    //     mapControl.addLayer(circlesLayer);\n    // }, 5000);\n  }\n\n  createMarker(dataPoint) {\n    // const marker = window.L.marker([dataPoint.locationLatitude, dataPoint.locationLongitude]);\n    const way = this.calculatePointPolyline(dataPoint.locationLatitude, dataPoint.locationLongitude, dataPoint.value, dataPoint.id, dataPoint.type);\n    // this.createPopupMarker(marker, dataPoint.value);\n    // return marker;\n  }\n\n  createPolyline(way, value, id, type, street_name) {\n    const polyline = [];\n    // way.forEach((point) => {\n    //   polyline.push([point[1], point[0]]);\n    // });\n\n    let colorIndex;\n    carsCount.range.forEach((_value, index) => {\n      if (value > _value) {\n        colorIndex = index;\n      }\n    });\n\n    const color = carsCount.color[colorIndex];\n\n    const polygon = window.L.polyline(way, {\n      color: color,\n      weight: 5,\n      smoothFactor: 5,\n      id: id,\n      type: type\n    }).on('click', function (e) {\n      drawChart(providedPollutants, e, 1);\n    }).on('click', this.setTarget).on('click', this.removePollDropdown);\n\n    // globalPolylines.push(polygon);\n    // polylinesLayer = this.addPolylines(globalPolylines);\n\n    polylinesLayer.addLayer(polygon);\n\n    this.createPopupPolyline(polygon, value, street_name);\n  }\n\n  calculatePointPolyline(latitude, longitude, value, id, type) {\n    const way = this.nominatim(latitude, longitude, value, id, type);\n    return way;\n  }\n\n  nominatim(latitude, longitude, value, id, type) {\n    const urlStart = 'http://130.206.118.134:8282/reverse?format=json&';\n    const urlFinish = '&zoom=16&addressdetails=1&polygon_geojson=1';\n\n    window.$.ajax({\n      url: urlStart + 'lat=' + latitude + '&lon=' + longitude + urlFinish,\n      type: 'GET',\n      dataType: 'json',\n      cache: false,\n      success: (data) => {\n        let street_name = ''\n\n        if(data.address.road) {\n          street_name += data.address.road\n        }\n\n        if(data.address.city) {\n          if (data.address.road) {\n            street_name += ', '\n          }\n          street_name += data.address.city\n        }\n\n        if(data.address.country) {\n          if (data.address.city || data.address.road) {\n            street_name += ', '\n          }\n          street_name += data.address.country\n        }\n        if (data.osm_id) {\n          this.osm(data.osm_id, value, id, type, street_name);\n        }\n        else {\n          console.log(\"OSM ID not found for: \" + latitude + \";\" + longitude);\n        }\n        // this.createPolyline(data.geojson.coordinates, value, id, type);\n      },\n      error: (error) => {\n        // this.osm(120550284, value, id, type);\n        console.log('Nominatim Error');\n        console.log(error);\n      }\n    });\n  }\n\n  osm(osm_id, value, id, type, street_name) {\n    const url = 'http://api.openstreetmap.org/api/0.6/way/' + osm_id + '/full';\n    const wayCoordinates = [];\n    const nodesAux = {}\n\n    window.$.ajax({\n      url: url,\n      type: 'GET',\n      dataType: 'xml',\n      cache: false,\n      success: (data) => {\n        const nodes = data.getElementsByTagName('node');\n        const nds = data.getElementsByTagName('nd');\n\n        let i;\n        for (i = 0; i < nodes.length; i++) {\n          let nodeId = nodes[i].attributes.id.value;\n          let lat = parseFloat(nodes[i].attributes.lat.value);\n          let lon = parseFloat(nodes[i].attributes.lon.value);\n\n          if (!(nodesAux[nodeId])) {\n            nodesAux[nodeId] = {};\n          }\n          nodesAux[nodeId].lat = lat;\n          nodesAux[nodeId].lng = lon;\n        }\n        \n        for (i = 0; i < nds.length; i++) {\n          let nd = nds[i].attributes.ref.value;\n\n          wayCoordinates.push([nodesAux[nd].lat, nodesAux[nd].lng]);\n        }\n        this.createPolyline(wayCoordinates, value, id, type, street_name);\n      },\n      error: (error) => {\n        console.log('OSM Error');\n        console.log(error);\n      }\n    });\n  }\n\n  createCircle(dataPoint) {\n    const aqi = calculateAQI(dataPoint.value);\n    const aqiColor = AQI.color[aqi];\n    const aqiMeaning = AQI.meaning[aqi];\n    const aqiRisk = AQI.risks[aqi];\n    const pollutants = dataPoint.pollutants;\n    const id = dataPoint.id;\n    const type = dataPoint.type;\n\n    pollutants.push({'name': 'aqi', 'value': dataPoint.value});\n\n    const circle = window.L.circle([dataPoint.locationLatitude, dataPoint.locationLongitude], 200, {\n      color: aqiColor,\n      fillColor: aqiColor,\n      fillOpacity: 0.5,\n      aqiColor: aqiColor,\n      aqiMeaning: aqiMeaning,\n      aqiRisk: aqiRisk,\n      pollutants: pollutants,\n      id: id,\n      type: type,\n      latitude: dataPoint.locationLatitude,\n      longitude: dataPoint.locationLongitude,\n      aqi: dataPoint.value\n    }).on('click', function (e) {\n      drawChart(providedPollutants, e, 1);\n    }).on('click', this.setTarget).on('click', this.addPollDropdown);\n\n    this.createPopupCircle(circle, dataPoint.value, aqiMeaning);\n    return circle;\n  }\n\n  addPollDropdown() {\n    // Add pollutants chart dropdown \n    document.getElementById('dataDetails').style.display = 'block';\n\n    // Remove traffic colors table\n    document.getElementById('trafficTable').style.display = 'none';\n\n    const mapDivHeight = document.getElementsByClassName('mapcontainer')[0].offsetHeight;\n    const mapDivWidth = document.getElementsByClassName('mapcontainer')[0].offsetWidth;\n    \n    // Only show the map secundary data (tables) when the map div is not too small\n    if (mapDivHeight >= 405 && mapDivHeight >= 860) {\n      // Add environment colors table\n      document.getElementById('environmentTable').style.display = 'block';\n    }\n  }\n\n  removePollDropdown() {\n    // Remove pollutants chart dropdown\n    document.getElementById('dataDetails').style.display = 'none';\n\n    // Remove environmentcolors table\n    document.getElementById('environmentTable').style.display = 'none';\n\n    const mapDivHeight = document.getElementsByClassName('mapcontainer')[0].offsetHeight;\n    const mapDivWidth = document.getElementsByClassName('mapcontainer')[0].offsetWidth;\n\n    // Only show the map secundary data (tables) when the map div is not too small\n    if (mapDivHeight >= 405 && mapDivHeight >= 860) {\n      // Add traffic colors table\n      document.getElementById('trafficTable').style.display = 'block';\n    }\n    \n  }\n\n  createPopupMarker(marker, value) {\n    const label = ('Cars: ' + value);\n    marker.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    marker.on('mouseover', function onMouseOver(evt) {\n      // const layer = evt.target;\n      // layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      marker.on('mouseout', function onMouseOut() {\n        marker.closePopup();\n      });\n    }\n  }\n\n  createPopupCircle(circle, aqi, aqiMeaning) {\n    const label = ('AQI: ' + aqi + ' (' + aqiMeaning + ')').trim();\n    circle.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    circle.on('mouseover', function onMouseOver(evt) {\n      // const layer = evt.target;\n      // layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      circle.on('mouseout', function onMouseOut() {\n        circle.closePopup();\n      });\n    }\n  }\n\n  createPopupPolyline(polyline, value, street_name) {\n    let label;\n\n    if (street_name !== '') {\n      label = ('Street: ' + street_name + '</br>Cars Intensity: ' + value).trim();\n    }else{\n      label = ('Cars Intensity: ' + value).trim();\n    }\n    \n    polyline.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    polyline.on('mouseover', function onMouseOver(evt) {\n      // const layer = evt.target;\n      // layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      polyline.on('mouseout', function onMouseOut() {\n        polyline.closePopup();\n      });\n    }\n  }\n\n  setTarget(e) {\n    currentTargetForChart = e;\n  }\n\n  resize() {\n    this.map.invalidateSize();\n  }\n\n  panToMapCenter() {\n    this.map.panTo([parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude)]);\n    this.ctrl.mapCenterMoved = false;\n  }\n\n  removeLegend() {\n    this.legend.removeFrom(this.map);\n    this.legend = null;\n  }\n\n  // addCircles(circles) {\n  //   return window.L.layerGroup(circles).addTo(this.map);\n  // }\n  addMarkers(markers) {\n    return window.L.layerGroup(markers).addTo(this.map);\n  }\n\n  addPolylines(polylines) {\n    return window.L.layerGroup(polylines).addTo(this.map);\n  }\n\n  removeCircles() {\n    this.map.removeLayer(circlesLayer);\n  }\n\n  removeMarkers() {\n    this.map.removeLayer(this.markersLayer);\n  }\n\n  removePolylines() {\n    this.map.removeLayer(polylinesLayer);\n  }\n\n  setZoom(zoomFactor) {\n    this.map.setZoom(parseInt(zoomFactor, 10));\n  }\n\n}\n\nfunction showPollutants(providedPollutants, allPollutants, id, aqi) {\n\n  const measuresTable = document.getElementById('measures-table');\n\n  while (measuresTable.rows[0]) measuresTable.deleteRow(0);\n\n  // Remove air paramters from dropdown\n  var el = document.getElementById('airParametersDropdown');\n  while ( el.firstChild ) {\n    el.removeChild( el.firstChild )\n  }\n\n  // ---\n\n  // Add default pollutant option to dropdown\n  const defaultPollutantOption = document.createElement('option');\n  const html = '<option value=\"0\" selected=\"selected\">Air Parameter</option>';\n\n  defaultPollutantOption.innerHTML = html;\n  document.getElementById('airParametersDropdown').appendChild(defaultPollutantOption);\n\n  // -----\n\n\n  const pollutantsToShow = {};\n  for (const key in allPollutants) {\n    \n    allPollutants[key].forEach((_value) => {\n      if (_value.id === id) {\n        if (_value.value) {\n          if (!(pollutantsToShow[key])){\n            pollutantsToShow[key] = 0;\n          }\n          pollutantsToShow[key] = _value.value;\n        }\n      }\n    });\n  }\n\n  pollutantsToShow['aqi'] = aqi;\n\n  for (const pollutant in pollutantsToShow){\n    const row = measuresTable.insertRow(0);\n    row.className = 'measure';\n\n    const innerCell0 = providedPollutants[pollutant].name;\n    const innerCell1 = pollutantsToShow[pollutant] + ' ' + providedPollutants[pollutant].unit;\n\n    const cell0 = row.insertCell(0);\n    const cell1 = row.insertCell(1);\n\n\n    cell0.innerHTML = innerCell0;\n    cell1.innerHTML = innerCell1;\n    cell0.className = 'cell';\n    cell1.className = 'cell';\n\n    // Add Pollutants to Chart Dropdown\n    const newPollutant = document.createElement('option');\n\n    newPollutant.id = 'pollutantOption';\n    newPollutant.value = pollutant.toUpperCase();\n\n    newPollutant.innerHTML = providedPollutants[pollutant].name;\n\n    document.getElementById('airParametersDropdown').appendChild(newPollutant);\n\n    // ----\n  }\n\n  const mapDivHeight = document.getElementsByClassName('mapcontainer')[0].offsetHeight;\n  const mapDivWidth = document.getElementsByClassName('mapcontainer')[0].offsetWidth;\n\n  // Only show the map secundary data (tables) when the map div is not too small\n  if (mapDivHeight >= 405 && mapDivWidth >= 860) {\n    document.getElementById('environmentTable').style.display = 'block';\n    document.getElementById('measuresTable').style.display = 'block';\n  }\n}\n\nfunction showHealthConcerns(providedPollutants, risk, color, meaning) {\n  const healthConcernsWrapper = document.getElementById('healthConcernsWrapper');\n  const healthConcerns = document.getElementById('healthConcerns');\n  const healthRisk = document.getElementById('healthRisk');\n\n  const mapDivHeight = document.getElementsByClassName('mapcontainer')[0].offsetHeight;\n  const mapDivWidth = document.getElementsByClassName('mapcontainer')[0].offsetWidth;\n\n  // Only show the map secundary data (tables) when the map div is not too small\n  if (mapDivHeight >= 405 && mapDivWidth >= 860) {\n    healthConcernsWrapper.style.display = 'block';\n    healthConcerns.style.backgroundColor = color;\n    healthRisk.innerHTML = risk;\n  }\n}\n\nfunction calculateAQI(aqi) {\n  let aqiIndex;\n  AQI.range.forEach((value, index) => {\n    if (aqi >= value) {\n      aqiIndex = index;\n    }\n  });\n  return aqiIndex;\n}\n\nfunction drawChart(providedPollutants, e, redrawChart) {\n  const currentParameter = currentParameterForChart.toLowerCase();\n\n  const chart = document.getElementById('dataChart');\n  chart.style.display = 'block';\n\n  const id = e.target.options.id;\n  const type = e.target.options.type;\n\n  const values = timeSeries.values[id];\n  let title = '';\n  let parameterUnit = '';\n\n  const lastValueMeasure = values[values.length - 1].value; //values array is the one for the AQI values\n\n  const aqiIndex = calculateAQI(lastValueMeasure);\n\n  // Show Pollutants Legend (MAP)\n  if (type === 'environment') {\n    const allPollutants = timeSeries.pollutants;\n    showPollutants(providedPollutants, allPollutants, id, lastValueMeasure);\n    showHealthConcerns(providedPollutants, AQI.risks[aqiIndex], AQI.color[aqiIndex], AQI.meaning[aqiIndex]);\n  } else { // Hide legend\n    const mapDivHeight = document.getElementsByClassName('mapcontainer')[0].offsetHeight;\n    const mapDivWidth = document.getElementsByClassName('mapcontainer')[0].offsetWidth;\n\n    if (mapDivHeight >= 405 && mapDivWidth >= 860) {\n      document.getElementById('trafficTable').style.display = 'block';\n    }\n    document.getElementById('healthConcernsWrapper').style.display = 'none';\n    document.getElementById('measuresTable').style.display = 'none';\n\n  }\n\n  // ------\n\n  if (redrawChart) {\n    chartData = [];\n\n    parameterUnit = providedPollutants[currentParameter].unit;\n\n    title = providedPollutants[currentParameter].name + ' - Device ' + id;\n\n    if (type === 'environment' && currentParameter !== 'aqi') {\n\n      const parameterChoice = timeSeries.pollutants[currentParameter];\n      \n      parameterChoice.forEach((sensor) => {\n        if (sensor.id === id) {\n          const time = new Date(sensor.time);\n\n          const day = time.getDate();\n          const month = time.getMonth();\n          const year = time.getFullYear();\n          const hour = time.getHours() - 1;\n          const minutes = time.getMinutes();\n          const seconds = time.getSeconds();\n          const milliseconds = time.getMilliseconds();\n\n          chartData.push([Date.UTC(year, month, day, hour, minutes, seconds, milliseconds), sensor.value]);\n        }\n      });\n    }\n    if ((type === 'environment' && currentParameter === 'aqi')  || type === 'traffic') {\n\n      if(type === 'traffic') {\n        title = 'Cars Intensity - Device ' + id;\n        parameterUnit = 'Cars'\n      }\n\n      values.forEach((value) => {\n        const time = new Date(value.time);\n\n        const day = time.getDate();\n        const month = time.getMonth();\n        const year = time.getFullYear();\n        const hour = time.getHours() - 1;\n        const minutes = time.getMinutes();\n        const seconds = time.getSeconds();\n        const milliseconds = time.getMilliseconds();\n\n        chartData.push([Date.UTC(year, month, day, hour, minutes, seconds, milliseconds), value.value]);\n      });\n    }\n\n    window.Highcharts.theme = {\n      colors: ['#2b908f', '#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066', '#eeaaee',\n          '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],\n      chart: {\n          backgroundColor: {\n            linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n            stops: [\n                [0, '#2a2a2b'],\n                [1, '#3e3e40']\n            ]\n          },\n          style: {\n            fontFamily: '\\'Unica One\\', sans-serif'\n          },\n          plotBorderColor: '#606063'\n      },\n      title: {\n          style: {\n            color: '#E0E0E3',\n            // textTransform: 'uppercase',\n            fontSize: '20px'\n          }\n      },\n      subtitle: {\n          style: {\n            color: '#E0E0E3',\n            textTransform: 'uppercase'\n          }\n      },\n      xAxis: {\n          gridLineColor: '#707073',\n          labels: {\n            style: {\n                color: '#E0E0E3'\n            }\n          },\n          lineColor: '#707073',\n          minorGridLineColor: '#505053',\n          tickColor: '#707073',\n          title: {\n            style: {\n                color: '#A0A0A3'\n\n            }\n          }\n      },\n      yAxis: {\n          gridLineColor: '#707073',\n          labels: {\n            style: {\n                color: '#E0E0E3'\n            }\n          },\n          lineColor: '#707073',\n          minorGridLineColor: '#505053',\n          tickColor: '#707073',\n          tickWidth: 1,\n          title: {\n            style: {\n                color: '#A0A0A3'\n            }\n          }\n      },\n      tooltip: {\n          backgroundColor: 'rgba(0, 0, 0, 0.85)',\n          style: {\n            color: '#F0F0F0'\n          }\n      },\n      plotOptions: {\n          series: {\n            dataLabels: {\n                color: '#B0B0B3'\n            },\n            marker: {\n                lineColor: '#333'\n            }\n          },\n          boxplot: {\n            fillColor: '#505053'\n          },\n          candlestick: {\n            lineColor: 'white'\n          },\n          errorbar: {\n            color: 'white'\n          }\n      },\n      legend: {\n          itemStyle: {\n            color: '#E0E0E3'\n          },\n          itemHoverStyle: {\n            color: '#FFF'\n          },\n          itemHiddenStyle: {\n            color: '#606063'\n          }\n      },\n      credits: {\n          style: {\n            color: '#666'\n          }\n      },\n      labels: {\n          style: {\n            color: '#707073'\n          }\n      },\n\n      drilldown: {\n          activeAxisLabelStyle: {\n            color: '#F0F0F3'\n          },\n          activeDataLabelStyle: {\n            color: '#F0F0F3'\n          }\n      },\n\n      navigation: {\n          buttonOptions: {\n            symbolStroke: '#DDDDDD',\n            theme: {\n                fill: '#505053'\n            }\n          }\n      },\n\n      // scroll charts\n      rangeSelector: {\n          buttonTheme: {\n            fill: '#505053',\n            stroke: '#000000',\n            style: {\n                color: '#CCC'\n            },\n            states: {\n                hover: {\n                  fill: '#707073',\n                  stroke: '#000000',\n                  style: {\n                      color: 'white'\n                  }\n                },\n                select: {\n                  fill: '#000003',\n                  stroke: '#000000',\n                  style: {\n                      color: 'white'\n                  }\n                }\n            }\n          },\n          inputBoxBorderColor: '#505053',\n          inputStyle: {\n            backgroundColor: '#333',\n            color: 'silver'\n          },\n          labelStyle: {\n            color: 'silver'\n          }\n      },\n\n      navigator: {\n          handles: {\n            backgroundColor: '#666',\n            borderColor: '#AAA'\n          },\n          outlineColor: '#CCC',\n          maskFill: 'rgba(255,255,255,0.1)',\n          series: {\n            color: '#7798BF',\n            lineColor: '#A6C7ED'\n          },\n          xAxis: {\n            gridLineColor: '#505053'\n          }\n      },\n\n      scrollbar: {\n          barBackgroundColor: '#808083',\n          barBorderColor: '#808083',\n          buttonArrowColor: '#CCC',\n          buttonBackgroundColor: '#606063',\n          buttonBorderColor: '#606063',\n          rifleColor: '#FFF',\n          trackBackgroundColor: '#404043',\n          trackBorderColor: '#404043'\n      },\n\n      // special colors for some of the\n      legendBackgroundColor: 'rgba(0, 0, 0, 0.5)',\n      background2: '#505053',\n      dataLabelsColor: '#B0B0B3',\n      textColor: '#C0C0C0',\n      contrastTextColor: '#F0F0F3',\n      maskColor: 'rgba(255,255,255,0.3)'\n    };\n    window.Highcharts.setOptions(window.Highcharts.theme);\n\n    window.Highcharts.stockChart('graphContainer', {\n        chart: {\n          zoomType: 'x',\n          backgroundColor: '#1f1d1d',\n          events: {\n            load: function () {\n              // set up the updating of the chart each second\n              chartSeries = this.series[0];\n              // setInterval(function () {\n              //     const x = chartData[chartData.length - 1][0];\n              //     const y = chartData[chartData.length - 1][1];\n              //     series.addPoint([x, y], true, true);\n              //     //console.log(chartData[chartData.length - 1]);\n              // }, 1000);\n            }\n          }\n        },\n        title: {\n            text: title\n        },\n        subtitle: {\n            text: document.ontouchstart === undefined ? '' : ''\n        },\n        xAxis: {\n            type: 'datetime'\n        },\n        yAxis: {\n            title: {\n                text: parameterUnit\n            }\n        },\n        legend: {\n            enabled: false\n        },\n        rangeSelector: {\n          buttons: [{\n              count: 5,\n              type: 'minute',\n              text: '5M'\n          }, {\n              count: 10,\n              type: 'minute',\n              text: '10M'\n          }, {\n              type: 'all',\n              text: 'All'\n          }],\n          inputEnabled: false,\n          selected: 2\n        },\n\n        series: [{\n            name: title,\n            data: chartData\n        }]\n    });\n  }\n}\n"]}